31 Oct 09:07:36 CONFIG [geoserver.logging] - Log4j 2 configuration set to DEFAULT_LOGGING.xml
31 Oct 09:07:38 CONFIG [gwc.config] - Will look for 'geowebcache.xml' in directory '/opt/geoserver_data/gwc'.
31 Oct 09:07:38 CONFIG [gwc.config] - Create configuration file 'gwc/geowebcache.xml' from template jar:file:/usr/local/tomcat/webapps/geoserver/WEB-INF/lib/gwc-core-1.26.0.jar!/geowebcache_empty.xml
31 Oct 09:07:38 WARN   [config.XMLConfiguration] - GWC configuration validation error: cvc-elt.1.a: Cannot find the declaration of element 'gwcConfiguration'.
31 Oct 09:07:38 WARN   [config.XMLConfiguration] - Will try to use configuration anyway. Please check the order of declared elements against the schema.
31 Oct 09:07:38 CONFIG [org.geoserver] - GeoServer configuration lock is enabled
31 Oct 09:07:38 CONFIG [org.geoserver] - Loading catalog /opt/geoserver_data
31 Oct 09:07:39 CONFIG [org.geoserver] - Loaded style 'giant_polygon'
31 Oct 09:07:39 CONFIG [org.geoserver] - Loaded style 'grass'
31 Oct 09:07:39 CONFIG [org.geoserver] - Loaded style 'rain'
31 Oct 09:07:39 CONFIG [org.geoserver] - Loaded style 'line'
31 Oct 09:07:39 CONFIG [org.geoserver] - Loaded style 'raster'
31 Oct 09:07:39 CONFIG [org.geoserver] - Loaded style 'population'
31 Oct 09:07:39 CONFIG [org.geoserver] - Loaded style 'generic'
31 Oct 09:07:39 CONFIG [org.geoserver] - Loaded style 'restricted'
31 Oct 09:07:39 CONFIG [org.geoserver] - Loaded style 'point'
31 Oct 09:07:39 CONFIG [org.geoserver] - Loaded style 'tiger_roads'
31 Oct 09:07:39 CONFIG [org.geoserver] - Loaded style 'simple_roads'
31 Oct 09:07:39 CONFIG [org.geoserver] - Loaded style 'capitals'
31 Oct 09:07:39 CONFIG [org.geoserver] - Loaded style 'poly_landmarks'
31 Oct 09:07:39 CONFIG [org.geoserver] - Loaded style 'pophatch'
31 Oct 09:07:39 CONFIG [org.geoserver] - Loaded style 'cite_lakes'
31 Oct 09:07:39 CONFIG [org.geoserver] - Loaded style 'polygon'
31 Oct 09:07:39 CONFIG [org.geoserver] - Loaded style 'burg'
31 Oct 09:07:39 CONFIG [org.geoserver] - Loaded style 'simple_streams'
31 Oct 09:07:39 CONFIG [org.geoserver] - Loaded style 'poi'
31 Oct 09:07:39 CONFIG [org.geoserver] - Loaded style 'dem'
31 Oct 09:07:39 CONFIG [org.geoserver] - Loaded style 'green'
31 Oct 09:07:39 CONFIG [org.geoserver] - Loaded default workspace 'ne'
31 Oct 09:07:39 CONFIG [org.geoserver] - Loaded workspace 'sf'
31 Oct 09:07:39 CONFIG [org.geoserver] - Loaded workspace 'topp'
31 Oct 09:07:39 CONFIG [org.geoserver] - Loaded workspace 'sde'
31 Oct 09:07:39 CONFIG [org.geoserver] - Loaded workspace 'nurc'
31 Oct 09:07:39 CONFIG [org.geoserver] - Loaded workspace 'tiger'
31 Oct 09:07:39 CONFIG [org.geoserver] - Loaded workspace 'it.geosolutions'
31 Oct 09:07:39 CONFIG [org.geoserver] - Loaded workspace 'cite'
31 Oct 09:07:39 CONFIG [org.geoserver] - Loaded workspace 'ne'
31 Oct 09:07:39 CONFIG [org.geoserver] - Loaded style 'countries_mapcolor9'
31 Oct 09:07:39 CONFIG [org.geoserver] - Loaded style 'boundary_lines'
31 Oct 09:07:39 CONFIG [org.geoserver] - Loaded style 'countries'
31 Oct 09:07:39 CONFIG [org.geoserver] - Loaded style 'coastline'
31 Oct 09:07:39 CONFIG [org.geoserver] - Loaded style 'disputed'
31 Oct 09:07:39 CONFIG [org.geoserver] - Loaded style 'populated_places'
31 Oct 09:07:39 CONFIG [org.geoserver] - Loaded coverage store 'sfdem', enabled
31 Oct 09:07:40 CONFIG [org.geoserver] - Loaded coverage 'sfdem', enabled
31 Oct 09:07:40 CONFIG [org.geoserver] - Loaded layer 'sfdem'
31 Oct 09:07:40 CONFIG [org.geoserver] - Loaded data store 'sf', enabled
31 Oct 09:07:40 CONFIG [org.geoserver] - Loaded feature type 'roads', enabled
31 Oct 09:07:40 CONFIG [org.geoserver] - Loaded layer 'roads'
31 Oct 09:07:40 CONFIG [org.geoserver] - Loaded feature type 'restricted', enabled
31 Oct 09:07:40 CONFIG [org.geoserver] - Loaded layer 'restricted'
31 Oct 09:07:40 CONFIG [org.geoserver] - Loaded feature type 'archsites', enabled
31 Oct 09:07:40 CONFIG [org.geoserver] - Loaded layer 'archsites'
31 Oct 09:07:40 CONFIG [org.geoserver] - Loaded feature type 'streams', enabled
31 Oct 09:07:40 CONFIG [org.geoserver] - Loaded layer 'streams'
31 Oct 09:07:40 CONFIG [org.geoserver] - Loaded feature type 'bugsites', enabled
31 Oct 09:07:40 CONFIG [org.geoserver] - Loaded layer 'bugsites'
31 Oct 09:07:40 CONFIG [org.geoserver] - Loaded coverage store 'worldImageSample', enabled
31 Oct 09:07:40 CONFIG [org.geoserver] - Loaded coverage 'Img_Sample', enabled
31 Oct 09:07:40 CONFIG [org.geoserver] - Loaded layer 'Img_Sample'
31 Oct 09:07:40 CONFIG [org.geoserver] - Loaded coverage store 'mosaic', enabled
31 Oct 09:07:40 CONFIG [org.geoserver] - Loaded coverage 'mosaic', enabled
31 Oct 09:07:40 CONFIG [org.geoserver] - Loaded layer 'mosaic'
31 Oct 09:07:40 CONFIG [org.geoserver] - Loaded coverage store 'img_sample2', enabled
31 Oct 09:07:40 CONFIG [org.geoserver] - Loaded coverage 'Pk50095', enabled
31 Oct 09:07:40 CONFIG [org.geoserver] - Loaded layer 'Pk50095'
31 Oct 09:07:40 CONFIG [org.geoserver] - Loaded coverage store 'arcGridSample', enabled
31 Oct 09:07:40 CONFIG [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
31 Oct 09:07:40 CONFIG [org.geoserver] - Loaded layer 'Arc_Sample'
31 Oct 09:07:40 CONFIG [org.geoserver] - Loaded data store 'states_shapefile', enabled
31 Oct 09:07:40 CONFIG [org.geoserver] - Loaded feature type 'states', enabled
31 Oct 09:07:40 CONFIG [org.geoserver] - Loaded layer 'states'
31 Oct 09:07:40 CONFIG [org.geoserver] - Loaded data store 'taz_shapes', enabled
31 Oct 09:07:40 CONFIG [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
31 Oct 09:07:40 CONFIG [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
31 Oct 09:07:40 CONFIG [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
31 Oct 09:07:40 CONFIG [org.geoserver] - Loaded layer 'tasmania_water_bodies'
31 Oct 09:07:40 CONFIG [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
31 Oct 09:07:40 CONFIG [org.geoserver] - Loaded layer 'tasmania_roads'
31 Oct 09:07:40 CONFIG [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
31 Oct 09:07:40 CONFIG [org.geoserver] - Loaded layer 'tasmania_cities'
31 Oct 09:07:41 CONFIG [org.geoserver] - Loaded data store 'NaturalEarth', enabled
31 Oct 09:07:41 CONFIG [org.geoserver] - Loaded feature type 'disputed_areas', enabled
31 Oct 09:07:41 CONFIG [org.geoserver] - Loaded layer 'disputed_areas'
31 Oct 09:07:41 CONFIG [org.geoserver] - Loaded feature type 'countries', enabled
31 Oct 09:07:41 CONFIG [org.geoserver] - Loaded layer 'countries'
31 Oct 09:07:41 CONFIG [org.geoserver] - Loaded feature type 'boundary_lines', enabled
31 Oct 09:07:41 CONFIG [org.geoserver] - Loaded layer 'boundary_lines'
31 Oct 09:07:41 CONFIG [org.geoserver] - Loaded feature type 'coastlines', enabled
31 Oct 09:07:41 CONFIG [org.geoserver] - Loaded layer 'coastlines'
31 Oct 09:07:41 CONFIG [org.geoserver] - Loaded feature type 'populated_places', enabled
31 Oct 09:07:41 CONFIG [org.geoserver] - Loaded layer 'populated_places'
31 Oct 09:07:41 CONFIG [org.geoserver] - Loaded layer group 'world'
31 Oct 09:07:41 CONFIG [org.geoserver] - Loaded data store 'nyc', enabled
31 Oct 09:07:41 CONFIG [org.geoserver] - Loaded feature type 'poi', enabled
31 Oct 09:07:41 CONFIG [org.geoserver] - Loaded layer 'poi'
31 Oct 09:07:41 CONFIG [org.geoserver] - Loaded feature type 'tiger_roads', enabled
31 Oct 09:07:41 CONFIG [org.geoserver] - Loaded layer 'tiger_roads'
31 Oct 09:07:41 CONFIG [org.geoserver] - Loaded feature type 'giant_polygon', enabled
31 Oct 09:07:41 CONFIG [org.geoserver] - Loaded layer 'giant_polygon'
31 Oct 09:07:41 CONFIG [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
31 Oct 09:07:41 CONFIG [org.geoserver] - Loaded layer 'poly_landmarks'
31 Oct 09:07:41 CONFIG [org.geoserver] - Loaded layer group 'tasmania'
31 Oct 09:07:41 CONFIG [org.geoserver] - Loaded layer group 'spearfish'
31 Oct 09:07:41 CONFIG [org.geoserver] - Loaded layer group 'tiger-ny'
31 Oct 09:07:41 CONFIG [org.geoserver] - Read catalog in 2.205 s
31 Oct 09:07:41 CONFIG [config.XMLConfiguration] - Initializing GridSets from gwc
31 Oct 09:07:41 CONFIG [config.XMLConfiguration] - Initializing layers from gwc
31 Oct 09:07:41 CONFIG [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
31 Oct 09:07:41 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
31 Oct 09:07:41 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
31 Oct 09:07:41 CONFIG [gwc.layer] - Loaded 0 tile layers in 2.527 ms
31 Oct 09:07:41 CONFIG [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
31 Oct 09:07:41 CONFIG [storage.DefaultStorageFinder] - Found system environment variableGEOSERVER_DATA_DIR set to /opt/geoserver_data/, using it as the default prefix.
31 Oct 09:07:41 CONFIG [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
31 Oct 09:07:41 CONFIG [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
31 Oct 09:07:41 CONFIG [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
31 Oct 09:07:41 CONFIG [org.geoserver] - Loaded service 'WMTSInfoImpl--3ef31051:182c1e8b194:-8000', enabled
31 Oct 09:07:41 CONFIG [org.geoserver] - Loaded service 'wcs', enabled
31 Oct 09:07:41 CONFIG [org.geoserver] - Loaded service 'wms', enabled
31 Oct 09:07:41 CONFIG [org.geoserver] - Loaded service 'wfs', enabled
31 Oct 09:07:41 CONFIG [org.geoserver] - Loaded service 'WMTSInfoImpl-1c443fee:182c0f3f209:-7f98', enabled
31 Oct 09:07:41 CONFIG [org.geoserver] - Loaded service 'WCSInfoImpl-1c443fee:182c0f3f209:-7f96', enabled
31 Oct 09:07:41 CONFIG [org.geoserver] - Loaded service 'WMSInfoImpl-1c443fee:182c0f3f209:-7f99', enabled
31 Oct 09:07:41 CONFIG [org.geoserver] - Loaded service 'WFSInfoImpl-1c443fee:182c0f3f209:-7f97', enabled
31 Oct 09:07:41 CONFIG [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
31 Oct 09:07:42 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota.xml' in directory '/opt/geoserver_data/gwc'.
31 Oct 09:07:42 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/opt/geoserver_data/gwc'.
31 Oct 09:07:42 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
31 Oct 09:07:42 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
31 Oct 09:07:45 CONFIG [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
31 Oct 09:07:45 CONFIG [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
31 Oct 09:07:46 WARN   [gce.imagemosaic] - Unable to set ordering between tiff readers spi
31 Oct 09:07:46 CONFIG [platform.resource] - Notifying ENTRY_CREATE change on /opt/geoserver_data/gwc-layers. Created: 28, removed: 0, modified: 0
31 Oct 09:07:46 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
31 Oct 09:07:46 CONFIG [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
31 Oct 09:07:46 CONFIG [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
31 Oct 09:07:46 CONFIG [diskquota.DiskQuotaMonitor] - 28 layers attached to global quota 500.0 MB
31 Oct 09:07:46 CONFIG [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
31 Oct 09:07:47 CONFIG [geoserver.security] - Start reloading user/groups for service named default
31 Oct 09:07:47 CONFIG [geoserver.security] - Reloading user/groups successful for service named default
31 Oct 09:08:48 INFO   [geoserver.security] - Strong cryptography is available
31 Oct 09:09:06 INFO   [geoserver.wms] - 
Request: getServiceInfo
31 Oct 09:09:06 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8484/geoserver/
	Bbox = SRSEnvelope[-74.047185 : -73.90782, 40.679648 : 40.882078]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = application/openlayers
	FormatOptions = {}
	Get = true
	Height = 768
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@b6bf539]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:4326, FORMAT=application/openlayers, BBOX=-74.047185,40.679648,-73.90782,40.882078, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=528, HEIGHT=768, LAYERS=tiger:poly_landmarks}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=poly_landmarks]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 528
31 Oct 09:09:06 INFO   [geoserver.wms] - 
Request: getServiceInfo
31 Oct 09:09:07 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8484/geoserver/
	Bbox = SRSEnvelope[-74.06810760498047 : -73.88683319091797, 40.649070739746094 : 40.912742614746094]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 768
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@b6bf539]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=-74.06810760498047,40.649070739746094,-73.88683319091797,40.912742614746094, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=528, HEIGHT=768, TRANSPARENT=true, LAYERS=tiger:poly_landmarks}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=poly_landmarks]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 528
31 Oct 09:09:21 INFO   [geoserver.wms] - 
Request: getServiceInfo
31 Oct 09:09:21 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8484/geoserver/
	Bbox = SRSEnvelope[145.19754 : 148.27298000000002, -43.423512 : -40.852802]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = application/openlayers
	FormatOptions = {}
	Get = true
	Height = 641
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@b0d10461]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:4326, FORMAT=application/openlayers, BBOX=145.19754,-43.423512,148.27298000000002,-40.852802, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=641, LAYERS=topp:tasmania_roads}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=simple_roads]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 768
31 Oct 09:09:21 INFO   [geoserver.wms] - 
Request: getServiceInfo
31 Oct 09:09:21 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8484/geoserver/
	Bbox = SRSEnvelope[144.6240234375 : 148.8427734375, -43.89862060546875 : -40.37750244140625]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 641
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@b0d10461]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=144.6240234375,-43.89862060546875,148.8427734375,-40.37750244140625, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=641, TRANSPARENT=true, LAYERS=topp:tasmania_roads}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=simple_roads]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
31 Oct 09:09:24 INFO   [geoserver.wms] - 
Request: getServiceInfo
31 Oct 09:09:24 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8484/geoserver/
	Bbox = SRSEnvelope[589434.8564686741 : 609527.2102150217, 4914006.337837095 : 4928063.398014731]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["NAD27 / UTM zone 13N", 
  GEOGCS["NAD27", 
    DATUM["North American Datum 1927", 
      SPHEROID["Clarke 1866", 6378206.4, 294.9786982138982, AUTHORITY["EPSG","7008"]], 
      TOWGS84[2.478, 149.752, 197.726, 0.526, -0.498, 0.501, 0.685], 
      AUTHORITY["EPSG","6267"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4267"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", -105.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","26713"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = application/openlayers
	FormatOptions = {}
	Get = true
	Height = 537
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@c8d248ce]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:26713, FORMAT=application/openlayers, BBOX=589434.8564686741,4914006.337837095,609527.2102150217,4928063.398014731, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=537, LAYERS=sf:roads}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:26713
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=simple_roads]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 768
31 Oct 09:09:24 INFO   [geoserver.wms] - 
Request: getServiceInfo
31 Oct 09:09:25 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8484/geoserver/
	Bbox = SRSEnvelope[584814.0149117766 : 614132.9759048079, 4910792.351276112 : 4931292.718532958]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["NAD27 / UTM zone 13N", 
  GEOGCS["NAD27", 
    DATUM["North American Datum 1927", 
      SPHEROID["Clarke 1866", 6378206.4, 294.9786982138982, AUTHORITY["EPSG","7008"]], 
      TOWGS84[2.478, 149.752, 197.726, 0.526, -0.498, 0.501, 0.685], 
      AUTHORITY["EPSG","6267"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4267"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", -105.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","26713"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 538
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@c8d248ce]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:26713, BBOX=584814.0149117766,4910792.351276112,614132.9759048079,4931292.718532958, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=538, TRANSPARENT=true, LAYERS=sf:roads}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:26713
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=simple_roads]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 769
31 Oct 09:09:34 INFO   [geoserver.wms] - 
Request: getServiceInfo
31 Oct 09:09:34 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8484/geoserver/
	Bbox = SRSEnvelope[-180.0 : 180.0, -90.0 : 83.64513]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = application/openlayers
	FormatOptions = {}
	Get = true
	Height = 370
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@c353bf8d]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:4326, FORMAT=application/openlayers, BBOX=-180.0,-90.0,180.0,83.64513, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=370, LAYERS=ne:countries}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=ne:countries_mapcolor9]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 768
31 Oct 09:09:34 INFO   [geoserver.wms] - 
Request: getServiceInfo
31 Oct 09:09:35 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8484/geoserver/
	Bbox = SRSEnvelope[-270.0 : 270.0, -133.59375 : 126.5625]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 370
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@c353bf8d]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=-270,-133.59375,270,126.5625, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=370, TRANSPARENT=true, LAYERS=ne:countries}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=ne:countries_mapcolor9]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
31 Oct 09:09:37 INFO   [geoserver.wms] - 
Request: getServiceInfo
31 Oct 09:09:37 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8484/geoserver/
	Bbox = SRSEnvelope[-63.896484375 : 3.603515625, 30.234375 : 62.75390625]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 370
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@c353bf8d]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=-63.896484375,30.234375,3.603515625,62.75390625, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=370, TRANSPARENT=true, LAYERS=ne:countries}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=ne:countries_mapcolor9]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
31 Oct 09:09:41 INFO   [geoserver.wms] - 
Request: getServiceInfo
31 Oct 09:09:41 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8484/geoserver/
	Bbox = SRSEnvelope[-180.0 : 180.0, -90.0 : 90.0]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = application/openlayers
	FormatOptions = {}
	Get = true
	Height = 384
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@c353bf8d, org.geoserver.wms.MapLayerInfo@5e6faffa, org.geoserver.wms.MapLayerInfo@ef7d2b8, org.geoserver.wms.MapLayerInfo@de280657, org.geoserver.wms.MapLayerInfo@5ef2c670]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:4326, FORMAT=application/openlayers, BBOX=-180.0,-90.0,180.0,90.0, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=384, LAYERS=ne:world}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=ne:countries], StyleImpl[ name=ne:disputed], StyleImpl[ name=ne:coastline], StyleImpl[ name=ne:boundary_lines], StyleImpl[ name=ne:populated_places]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 768
31 Oct 09:09:41 INFO   [geoserver.wms] - 
Request: getServiceInfo
31 Oct 09:09:42 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8484/geoserver/
	Bbox = SRSEnvelope[-270.0 : 270.0, -135.0 : 135.0]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 384
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@c353bf8d, org.geoserver.wms.MapLayerInfo@5e6faffa, org.geoserver.wms.MapLayerInfo@ef7d2b8, org.geoserver.wms.MapLayerInfo@de280657, org.geoserver.wms.MapLayerInfo@5ef2c670]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=-270,-135,270,135, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=384, TRANSPARENT=true, LAYERS=ne:world}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=ne:countries], StyleImpl[ name=ne:disputed], StyleImpl[ name=ne:coastline], StyleImpl[ name=ne:boundary_lines], StyleImpl[ name=ne:populated_places]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
31 Oct 09:09:47 INFO   [geoserver.wms] - 
Request: getServiceInfo
31 Oct 09:09:47 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8484/geoserver/
	Bbox = SRSEnvelope[589980.0 : 609000.0, 4913700.0 : 4928010.0]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["NAD27 / UTM zone 13N", 
  GEOGCS["NAD27", 
    DATUM["North American Datum 1927", 
      SPHEROID["Clarke 1866", 6378206.4, 294.9786982138982, AUTHORITY["EPSG","7008"]], 
      TOWGS84[2.478, 149.752, 197.726, 0.526, -0.498, 0.501, 0.685], 
      AUTHORITY["EPSG","6267"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4267"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", -105.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","26713"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = application/openlayers
	FormatOptions = {}
	Get = true
	Height = 577
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@c4a8d910]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:26713, FORMAT=application/openlayers, BBOX=589980.0,4913700.0,609000.0,4928010.0, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=577, LAYERS=sf:sfdem}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:26713
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=dem]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 768
31 Oct 09:09:47 INFO   [geoserver.wms] - 
Request: getServiceInfo
31 Oct 09:09:48 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8484/geoserver/
	Bbox = SRSEnvelope[584814.0149117766 : 614132.9759048079, 4909837.9580146205 : 4931865.354489854]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["NAD27 / UTM zone 13N", 
  GEOGCS["NAD27", 
    DATUM["North American Datum 1927", 
      SPHEROID["Clarke 1866", 6378206.4, 294.9786982138982, AUTHORITY["EPSG","7008"]], 
      TOWGS84[2.478, 149.752, 197.726, 0.526, -0.498, 0.501, 0.685], 
      AUTHORITY["EPSG","6267"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4267"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", -105.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","26713"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 578
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@c4a8d910]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:26713, BBOX=584814.0149117766,4909837.9580146205,614132.9759048079,4931865.354489854, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=578, TRANSPARENT=true, LAYERS=sf:sfdem}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:26713
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=dem]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 769
31 Oct 09:09:54 INFO   [geoserver.wms] - 
Request: getServiceInfo
31 Oct 09:09:54 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8484/geoserver/
	Bbox = SRSEnvelope[-74.0118315772888 : -74.00153046439813, 40.70754683896324 : 40.719885123828675]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = application/openlayers
	FormatOptions = {}
	Get = true
	Height = 768
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@349ab7]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:4326, FORMAT=application/openlayers, BBOX=-74.0118315772888,40.70754683896324,-74.00153046439813,40.719885123828675, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=641, HEIGHT=768, LAYERS=tiger:poi}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=poi]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 641
31 Oct 09:09:54 INFO   [geoserver.wms] - 
Request: getServiceInfo
31 Oct 09:09:54 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8484/geoserver/
	Bbox = SRSEnvelope[-74.01355147361755 : -73.99979710578918, 40.705482959747314 : 40.721962451934814]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 768
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@349ab7]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=-74.01355147361755,40.705482959747314,-73.99979710578918,40.721962451934814, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=641, HEIGHT=768, TRANSPARENT=true, LAYERS=tiger:poi}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=poi]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 641
31 Oct 09:10:00 INFO   [geoserver.wms] - 
Request: getServiceInfo
31 Oct 09:10:00 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8484/geoserver/
	Bbox = SRSEnvelope[-180.0 : 180.0, -90.0 : 90.0]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = application/openlayers
	FormatOptions = {}
	Get = true
	Height = 384
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@70b70b01]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:4326, FORMAT=application/openlayers, BBOX=-180.0,-90.0,180.0,90.0, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=384, LAYERS=tiger:giant_polygon}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=giant_polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 768
31 Oct 09:10:00 INFO   [geoserver.wms] - 
Request: getServiceInfo
31 Oct 09:10:00 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8484/geoserver/
	Bbox = SRSEnvelope[-270.0 : 270.0, -135.0 : 135.0]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 384
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@70b70b01]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=-270,-135,270,135, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=384, TRANSPARENT=true, LAYERS=tiger:giant_polygon}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=giant_polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
31 Oct 09:10:08 INFO   [geoserver.wms] - 
Request: getServiceInfo
31 Oct 09:10:08 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8484/geoserver/
	Bbox = SRSEnvelope[589425.9342365642 : 609518.6719560538, 4913959.224611808 : 4928082.949945881]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["NAD27 / UTM zone 13N", 
  GEOGCS["NAD27", 
    DATUM["North American Datum 1927", 
      SPHEROID["Clarke 1866", 6378206.4, 294.9786982138982, AUTHORITY["EPSG","7008"]], 
      TOWGS84[2.478, 149.752, 197.726, 0.526, -0.498, 0.501, 0.685], 
      AUTHORITY["EPSG","6267"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4267"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", -105.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","26713"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = application/openlayers
	FormatOptions = {}
	Get = true
	Height = 539
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@c4a8d910, org.geoserver.wms.MapLayerInfo@3a400675, org.geoserver.wms.MapLayerInfo@c37173d5, org.geoserver.wms.MapLayerInfo@e009a81f, org.geoserver.wms.MapLayerInfo@fb994292, org.geoserver.wms.MapLayerInfo@6f893642]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:26713, FORMAT=application/openlayers, BBOX=589425.9342365642,4913959.224611808,609518.6719560538,4928082.949945881, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=539, LAYERS=spearfish}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:26713
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=dem], StyleImpl[ name=simple_streams], StyleImpl[ name=simple_roads], StyleImpl[ name=restricted], StyleImpl[ name=point], StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 768
31 Oct 09:10:08 INFO   [geoserver.wms] - 
Request: getServiceInfo
31 Oct 09:10:08 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8484/geoserver/
	Bbox = SRSEnvelope[584814.0149117766 : 614132.9759048079, 4910715.999815193 : 4931292.718532958]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["NAD27 / UTM zone 13N", 
  GEOGCS["NAD27", 
    DATUM["North American Datum 1927", 
      SPHEROID["Clarke 1866", 6378206.4, 294.9786982138982, AUTHORITY["EPSG","7008"]], 
      TOWGS84[2.478, 149.752, 197.726, 0.526, -0.498, 0.501, 0.685], 
      AUTHORITY["EPSG","6267"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4267"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", -105.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","26713"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 539
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@c4a8d910, org.geoserver.wms.MapLayerInfo@3a400675, org.geoserver.wms.MapLayerInfo@c37173d5, org.geoserver.wms.MapLayerInfo@e009a81f, org.geoserver.wms.MapLayerInfo@fb994292, org.geoserver.wms.MapLayerInfo@6f893642]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:26713, BBOX=584814.0149117766,4910715.999815193,614132.9759048079,4931292.718532958, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=769, HEIGHT=539, TRANSPARENT=true, LAYERS=spearfish}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:26713
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=dem], StyleImpl[ name=simple_streams], StyleImpl[ name=simple_roads], StyleImpl[ name=restricted], StyleImpl[ name=point], StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 769
31 Oct 09:10:20 INFO   [geoserver.wms] - 
Request: getServiceInfo
31 Oct 09:10:20 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8484/geoserver/
	Bbox = SRSEnvelope[143.83482400000003 : 148.47914100000003, -43.648056 : -39.573891]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = application/openlayers
	FormatOptions = {}
	Get = true
	Height = 673
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:4326, FORMAT=application/openlayers, BBOX=143.83482400000003,-43.648056,148.47914100000003,-39.573891, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=673, LAYERS=tasmania}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=green], StyleImpl[ name=cite_lakes], StyleImpl[ name=simple_roads], StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 768
31 Oct 09:10:20 INFO   [geoserver.wms] - 
Request: getServiceInfo
31 Oct 09:10:20 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8484/geoserver/
	Bbox = SRSEnvelope[141.943359375 : 150.380859375, -45.3131103515625 : -37.9193115234375]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 673
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=141.943359375,-45.3131103515625,150.380859375,-37.9193115234375, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=673, TRANSPARENT=true, LAYERS=tasmania}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=green], StyleImpl[ name=cite_lakes], StyleImpl[ name=simple_roads], StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
31 Oct 09:12:57 INFO   [geoserver.wms] - 
Request: getServiceInfo
31 Oct 09:12:57 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8484/geoserver/
	Bbox = SRSEnvelope[347649.93086859107 : 370725.976428591, 5176214.082539256 : 5196961.352859256]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 33N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32633"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = application/openlayers
	FormatOptions = {}
	Get = true
	Height = 690
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4e019bee]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:32633, FORMAT=application/openlayers, BBOX=347649.93086859107,5176214.082539256,370725.976428591,5196961.352859256, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=690, LAYERS=nurc:Pk50095}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32633
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=raster]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 768
31 Oct 09:12:57 INFO   [geoserver.wms] - 
Request: getServiceInfo
31 Oct 09:12:57 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8484/geoserver/
	Bbox = SRSEnvelope[344535.9673985759 : 373854.92839160707, 5173422.288973453 : 5199763.54299063]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = PROJCS["WGS 84 / UTM zone 33N", 
  GEOGCS["WGS 84", 
    DATUM["World Geodetic System 1984", 
      SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
      AUTHORITY["EPSG","6326"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4326"]], 
  PROJECTION["Transverse_Mercator", AUTHORITY["EPSG","9807"]], 
  PARAMETER["central_meridian", 15.0], 
  PARAMETER["latitude_of_origin", 0.0], 
  PARAMETER["scale_factor", 0.9996], 
  PARAMETER["false_easting", 500000.0], 
  PARAMETER["false_northing", 0.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","32633"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 690
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@4e019bee]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:32633, BBOX=344535.9673985759,5173422.288973453,373854.92839160707,5199763.54299063, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=690, TRANSPARENT=true, LAYERS=nurc:Pk50095}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:32633
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=raster]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
31 Oct 09:13:00 INFO   [geoserver.wms] - 
Request: getServiceInfo
31 Oct 09:13:00 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8484/geoserver/
	Bbox = SRSEnvelope[-180.0 : 180.0, -90.0 : 90.0]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = application/openlayers
	FormatOptions = {}
	Get = true
	Height = 384
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d9cfdbe9]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:4326, FORMAT=application/openlayers, BBOX=-180.0,-90.0,180.0,90.0, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=384, LAYERS=nurc:Arc_Sample}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=rain]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 768
31 Oct 09:13:00 INFO   [geoserver.wms] - 
Request: getServiceInfo
31 Oct 09:13:00 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8484/geoserver/
	Bbox = SRSEnvelope[-270.0 : 270.0, -135.0 : 135.0]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 384
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@d9cfdbe9]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=-270,-135,270,135, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=384, TRANSPARENT=true, LAYERS=nurc:Arc_Sample}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=rain]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
31 Oct 09:13:10 INFO   [geoserver.wms] - 
Request: getServiceInfo
31 Oct 09:13:10 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8484/geoserver/
	Bbox = SRSEnvelope[-74.047185 : -73.907005, 40.679648 : 40.882078]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = application/openlayers
	FormatOptions = {}
	Get = true
	Height = 768
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@794fb71c, org.geoserver.wms.MapLayerInfo@15e8cc7e, org.geoserver.wms.MapLayerInfo@fedbc729, org.geoserver.wms.MapLayerInfo@f1b59c92]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:4326, FORMAT=application/openlayers, BBOX=-74.047185,40.679648,-73.907005,40.882078, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=531, HEIGHT=768, LAYERS=tiger-ny}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=giant_polygon], StyleImpl[ name=poly_landmarks], StyleImpl[ name=tiger_roads], StyleImpl[ name=poi]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 531
31 Oct 09:13:11 INFO   [geoserver.wms] - 
Request: getServiceInfo
31 Oct 09:13:11 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8484/geoserver/
	Bbox = SRSEnvelope[-74.06827926635742 : -73.8859748840332, 40.649070739746094 : 40.912742614746094]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 768
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@794fb71c, org.geoserver.wms.MapLayerInfo@15e8cc7e, org.geoserver.wms.MapLayerInfo@fedbc729, org.geoserver.wms.MapLayerInfo@f1b59c92]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=-74.06827926635742,40.649070739746094,-73.8859748840332,40.912742614746094, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=531, HEIGHT=768, TRANSPARENT=true, LAYERS=tiger-ny}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=giant_polygon], StyleImpl[ name=poly_landmarks], StyleImpl[ name=tiger_roads], StyleImpl[ name=poi]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 531
31 Oct 09:13:30 INFO   [geoserver.wms] - 
Request: getServiceInfo
31 Oct 09:13:30 INFO   [geoserver.wms] - 
Request: kml
	Angle = 0.0
	BaseUrl = http://localhost:8484/geoserver/
	Bbox = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = null
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = null
	FormatOptions = {}
	Get = true
	Height = 0
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	MaxFeatures = null
	Palette = null
	RawKvp = {LAYERS=tasmania}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = null
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=green], StyleImpl[ name=cite_lakes], StyleImpl[ name=simple_roads], StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = null
	ViewParams = null
	Width = 0
31 Oct 09:14:28 INFO   [geoserver.wms] - 
Request: getServiceInfo
31 Oct 09:14:28 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost:8484/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/jpeg
 width height: 101,101
 bbox: SRSEnvelope[146.15661621093753 : 147.26623535156253, -42.4072265625 : -41.297607421875]
 layers: topp:tasmania_state_boundaries,topp:tasmania_water_bodies,topp:tasmania_roads,topp:tasmania_cities
 styles: green,cite_lakes,simple_roads,capitals
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	RawKvp = {FORMAT=image/jpeg, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=tasmania, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:4326, BBOX=146.15661621093753,-42.4072265625,147.26623535156253,-41.297607421875, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=tasmania, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
31 Oct 09:14:38 INFO   [geoserver.wms] - 
Request: getServiceInfo
31 Oct 09:14:38 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost:8484/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/jpeg
 width height: 101,101
 bbox: SRSEnvelope[145.67321777343753 : 146.78283691406253, -43.22021484375 : -42.110595703125]
 layers: topp:tasmania_state_boundaries,topp:tasmania_water_bodies,topp:tasmania_roads,topp:tasmania_cities
 styles: green,cite_lakes,simple_roads,capitals
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	RawKvp = {FORMAT=image/jpeg, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=tasmania, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:4326, BBOX=145.67321777343753,-43.22021484375,146.78283691406253,-42.110595703125, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=tasmania, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
31 Oct 09:14:40 INFO   [geoserver.wms] - 
Request: getServiceInfo
31 Oct 09:14:40 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost:8484/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/jpeg
 width height: 101,101
 bbox: SRSEnvelope[146.36535644531253 : 147.47497558593753, -42.51708984375 : -41.407470703125]
 layers: topp:tasmania_state_boundaries,topp:tasmania_water_bodies,topp:tasmania_roads,topp:tasmania_cities
 styles: green,cite_lakes,simple_roads,capitals
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	RawKvp = {FORMAT=image/jpeg, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=tasmania, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:4326, BBOX=146.36535644531253,-42.51708984375,147.47497558593753,-41.407470703125, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=tasmania, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
31 Oct 09:14:51 INFO   [geoserver.wms] - 
Request: getServiceInfo
31 Oct 09:14:51 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost:8484/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/jpeg
 width height: 101,101
 bbox: SRSEnvelope[146.36535644531253 : 147.47497558593753, -42.51708984375 : -41.407470703125]
 layers: topp:tasmania_state_boundaries,topp:tasmania_water_bodies,topp:tasmania_roads,topp:tasmania_cities
 styles: green,cite_lakes,simple_roads,capitals
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	RawKvp = {FORMAT=image/jpeg, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=tasmania, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:4326, BBOX=146.36535644531253,-42.51708984375,147.47497558593753,-41.407470703125, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=tasmania, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
31 Oct 09:15:41 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 09:15:41 INFO   [wfs.xml] - Identified addresses and hostnames for local interfaces: 172.18.0.2 f6b2976e71de, 0:0:0:0:0:0:0:1%lo localhost, 127.0.0.1 localhost
31 Oct 09:15:41 INFO   [wfs.xml] - Additional aliases for local host: localhost 
31 Oct 09:15:42 INFO   [geoserver.gwc] - DataStoreChange: {http://www.openplans.org/topp}tasmania_roads TransactionEventType[PreUpdate]
31 Oct 09:15:42 INFO   [geoserver.gwc] - DataStoreChange: {http://www.openplans.org/topp}tasmania_roads TransactionEventType[PostUpdate]
31 Oct 09:15:42 INFO   [geoserver.wfs] - 
Request: transaction
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8484/geoserver/
    group[0] = wfs:update=net.opengis.wfs.impl.UpdateElementTypeImpl@4103a722 (filter: [ tasmania_roads.1 ], handle: null, inputFormat: <unset>, srsName: null, typeName: {http://www.openplans.org/topp}tasmania_roads)
    update[0]:
        property[0]:
            name = {https://www.naturalearthdata.com}TYPE
            value = street
        filter = [ tasmania_roads.1 ]
        inputFormat = x-application/gml:3
        typeName = {http://www.openplans.org/topp}tasmania_roads
    releaseAction = ALL
31 Oct 09:16:31 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 09:16:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 2.0.0
    baseUrl = http://localhost:8484/geoserver/
    outputFormat = application/gml+xml; version=3.2
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@59f62500 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [ bugsites.3 ], abstractSortingClause: null, aliases: null, typeNames: [{http://www.openplans.org/spearfish}bugsites]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [ bugsites.3 ]
        typeNames[0] = {http://www.openplans.org/spearfish}bugsites
        filter = [ bugsites.3 ]
31 Oct 09:17:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 09:17:12 INFO   [geoserver.ows] - 
org.geoserver.wfs.WFSException: Could not locate tasmania in catalog.
	at org.geoserver.wfs.GetFeature.featureTypeInfo(GetFeature.java:1504)
	at org.geoserver.wfs.GetFeature.run(GetFeature.java:346)
	at org.geoserver.wfs.DefaultWebFeatureService20.getFeature(DefaultWebFeatureService20.java:114)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:51)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:241)
	at jdk.proxy3/jdk.proxy3.$Proxy115.getFeature(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:905)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:269)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:168)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:141)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:660)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:383)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:937)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
31 Oct 09:18:02 WARN   [wicket.Localizer] - Tried to retrieve a localized string for a component that has not yet been added to the page. This can sometimes lead to an invalid or no localized resource returned. Make sure you are not calling Component#getString() inside your Component's constructor. Offending component: [DimensionEditor [Component id = time]]
31 Oct 09:18:02 WARN   [wicket.Localizer] - Tried to retrieve a localized string for a component that has not yet been added to the page. This can sometimes lead to an invalid or no localized resource returned. Make sure you are not calling Component#getString() inside your Component's constructor. Offending component: [DimensionEditor [Component id = elevation]]
31 Oct 09:18:02 WARN   [wicket.Localizer] - Tried to retrieve a localized string for a component that has not yet been added to the page. This can sometimes lead to an invalid or no localized resource returned. Make sure you are not calling Component#getString() inside your Component's constructor. Offending component: [DimensionEditor [Component id = time]]
31 Oct 09:18:02 WARN   [wicket.Localizer] - Tried to retrieve a localized string for a component that has not yet been added to the page. This can sometimes lead to an invalid or no localized resource returned. Make sure you are not calling Component#getString() inside your Component's constructor. Offending component: [DimensionEditor [Component id = elevation]]
31 Oct 09:18:41 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 09:18:41 INFO   [geoserver.ows] - 
org.geoserver.wfs.WFSException: Could not locate {http://www.openplans.org/topp}tasmania in catalog.
	at org.geoserver.wfs.GetFeature.featureTypeInfo(GetFeature.java:1504)
	at org.geoserver.wfs.GetFeature.run(GetFeature.java:346)
	at org.geoserver.wfs.DefaultWebFeatureService20.getFeature(DefaultWebFeatureService20.java:114)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:51)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:241)
	at jdk.proxy3/jdk.proxy3.$Proxy115.getFeature(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:905)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:269)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:168)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:141)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:660)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:383)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:937)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
31 Oct 09:18:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 09:18:59 INFO   [geoserver.ows] - 
org.geoserver.wfs.WFSException: Could not locate {http://www.openplans.org/topp}Tasmania in catalog.
	at org.geoserver.wfs.GetFeature.featureTypeInfo(GetFeature.java:1504)
	at org.geoserver.wfs.GetFeature.run(GetFeature.java:346)
	at org.geoserver.wfs.DefaultWebFeatureService20.getFeature(DefaultWebFeatureService20.java:114)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:51)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:241)
	at jdk.proxy3/jdk.proxy3.$Proxy115.getFeature(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:905)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:269)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:168)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:141)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:660)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:383)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:937)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
31 Oct 09:19:14 INFO   [geoserver.wms] - 
Request: getServiceInfo
31 Oct 09:19:14 INFO   [geoserver.wms] - 
Request: getFeatureInfo
	BaseUrl = http://localhost:8484/geoserver/
	Exceptions = application/vnd.ogc.se_inimage
	ExcludeNodataResults = false
	FeatureCount = 50
	Get = false
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/jpeg
 width height: 101,101
 bbox: SRSEnvelope[145.64025878906253 : 146.74987792968753, -43.26416015625 : -42.154541015625]
 layers: topp:tasmania_state_boundaries,topp:tasmania_water_bodies,topp:tasmania_roads,topp:tasmania_cities
 styles: green,cite_lakes,simple_roads,capitals
	InfoFormat = text/html
	PropertyNames = null
	QueryLayers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	RawKvp = {FORMAT=image/jpeg, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=tasmania, EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetFeatureInfo, SRS=EPSG:4326, BBOX=145.64025878906253,-43.26416015625,146.74987792968753,-42.154541015625, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=tasmania, TRANSPARENT=true, FEATURE_COUNT=50}
	Request = GetFeatureInfo
	RequestCharset = null
	Version = 1.1.1
	XPixel = 50
	YPixel = 50
31 Oct 09:19:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 09:19:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 2.0.0
    baseUrl = http://localhost:8484/geoserver/
    outputFormat = application/gml+xml; version=3.2
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@630680a6 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: null, abstractSortingClause: null, aliases: null, typeNames: [{http://www.openplans.org/topp}tasmania_water_bodies]) (featureVersion: null, srsName: null, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        typeNames[0] = {http://www.openplans.org/topp}tasmania_water_bodies
31 Oct 09:40:57 INFO   [geoserver.wms] - 
Request: getServiceInfo
31 Oct 09:40:57 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8484/geoserver/
	Bbox = SRSEnvelope[145.71441650390625 : 147.82379150390625, -42.400360107421875 : -40.551910400390625]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 673
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=145.71441650390625,-42.400360107421875,147.82379150390625,-40.551910400390625, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=673, TRANSPARENT=true, LAYERS=tasmania}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=green], StyleImpl[ name=cite_lakes], StyleImpl[ name=simple_roads], StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
31 Oct 09:40:57 INFO   [geoserver.wms] - 
Request: getServiceInfo
31 Oct 09:40:57 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8484/geoserver/
	Bbox = SRSEnvelope[146.31317138671875 : 147.36785888671875, -41.99867248535156 : -41.07444763183594]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 673
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=146.31317138671875,-41.99867248535156,147.36785888671875,-41.07444763183594, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=673, TRANSPARENT=true, LAYERS=tasmania}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=green], StyleImpl[ name=cite_lakes], StyleImpl[ name=simple_roads], StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
31 Oct 09:40:58 INFO   [geoserver.wms] - 
Request: getServiceInfo
31 Oct 09:40:58 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8484/geoserver/
	Bbox = SRSEnvelope[145.711669921875 : 147.821044921875, -42.400360107421875 : -40.551910400390625]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 673
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=145.711669921875,-42.400360107421875,147.821044921875,-40.551910400390625, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=673, TRANSPARENT=true, LAYERS=tasmania}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=green], StyleImpl[ name=cite_lakes], StyleImpl[ name=simple_roads], StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
31 Oct 09:40:58 INFO   [geoserver.wms] - 
Request: getServiceInfo
31 Oct 09:40:58 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8484/geoserver/
	Bbox = SRSEnvelope[144.5086669921875 : 148.7274169921875, -43.20648193359375 : -39.50958251953125]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 673
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=144.5086669921875,-43.20648193359375,148.7274169921875,-39.50958251953125, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=673, TRANSPARENT=true, LAYERS=tasmania}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=green], StyleImpl[ name=cite_lakes], StyleImpl[ name=simple_roads], StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
31 Oct 09:40:59 INFO   [geoserver.wms] - 
Request: getServiceInfo
31 Oct 09:40:59 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8484/geoserver/
	Bbox = SRSEnvelope[142.086181640625 : 150.523681640625, -44.8187255859375 : -37.4249267578125]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 673
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=142.086181640625,-44.8187255859375,150.523681640625,-37.4249267578125, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=673, TRANSPARENT=true, LAYERS=tasmania}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=green], StyleImpl[ name=cite_lakes], StyleImpl[ name=simple_roads], StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
31 Oct 09:41:00 INFO   [geoserver.wms] - 
Request: getServiceInfo
31 Oct 09:41:00 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8484/geoserver/
	Bbox = SRSEnvelope[142.31689453125 : 150.75439453125, -45.5328369140625 : -38.1390380859375]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/jpeg
	FormatOptions = {}
	Get = true
	Height = 673
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@9e2fc777, org.geoserver.wms.MapLayerInfo@c373ac85, org.geoserver.wms.MapLayerInfo@3836dca2, org.geoserver.wms.MapLayerInfo@abf79844]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/jpeg, SRS=EPSG:4326, BBOX=142.31689453125,-45.5328369140625,150.75439453125,-38.1390380859375, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=673, TRANSPARENT=true, LAYERS=tasmania}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=green], StyleImpl[ name=cite_lakes], StyleImpl[ name=simple_roads], StyleImpl[ name=capitals]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
31 Oct 09:52:01 INFO   [file.FileBlobStore] - /opt/geoserver_data/gwc/ne_world does not exist or is not writable
31 Oct 09:52:01 INFO   [file.FileBlobStore] - /opt/geoserver_data/gwc/ne_boundary_lines does not exist or is not writable
31 Oct 09:52:01 INFO   [file.FileBlobStore] - /opt/geoserver_data/gwc/ne_coastlines does not exist or is not writable
31 Oct 09:52:01 INFO   [file.FileBlobStore] - /opt/geoserver_data/gwc/ne_countries does not exist or is not writable
31 Oct 09:52:01 INFO   [file.FileBlobStore] - /opt/geoserver_data/gwc/ne_disputed_areas does not exist or is not writable
31 Oct 09:52:01 INFO   [file.FileBlobStore] - /opt/geoserver_data/gwc/ne_populated_places does not exist or is not writable
31 Oct 09:52:01 INFO   [file.FileBlobStore] - /opt/geoserver_data/gwc/nurc_Arc_Sample does not exist or is not writable
31 Oct 09:52:01 INFO   [file.FileBlobStore] - /opt/geoserver_data/gwc/nurc_Pk50095 does not exist or is not writable
31 Oct 09:52:01 INFO   [file.FileBlobStore] - /opt/geoserver_data/gwc/nurc_mosaic does not exist or is not writable
31 Oct 09:52:01 INFO   [file.FileBlobStore] - /opt/geoserver_data/gwc/nurc_Img_Sample does not exist or is not writable
31 Oct 09:52:01 INFO   [gwc.layer] - Truncating TileLayer for layer group 'spearfish' due to a change in its layers or styles
31 Oct 09:52:01 INFO   [file.FileBlobStore] - /opt/geoserver_data/gwc/spearfish does not exist or is not writable
31 Oct 09:52:01 INFO   [file.FileBlobStore] - /opt/geoserver_data/gwc/spearfish does not exist or is not writable
31 Oct 09:52:01 INFO   [file.FileBlobStore] - /opt/geoserver_data/gwc/sf_sfdem does not exist or is not writable
31 Oct 09:52:01 INFO   [gwc.layer] - Truncating TileLayer for layer group 'spearfish' due to a change in its layers or styles
31 Oct 09:52:01 INFO   [file.FileBlobStore] - /opt/geoserver_data/gwc/spearfish does not exist or is not writable
31 Oct 09:52:01 INFO   [file.FileBlobStore] - /opt/geoserver_data/gwc/spearfish does not exist or is not writable
31 Oct 09:52:01 INFO   [file.FileBlobStore] - /opt/geoserver_data/gwc/sf_archsites does not exist or is not writable
31 Oct 09:52:01 INFO   [gwc.layer] - Truncating TileLayer for layer group 'spearfish' due to a change in its layers or styles
31 Oct 09:52:01 INFO   [file.FileBlobStore] - /opt/geoserver_data/gwc/spearfish does not exist or is not writable
31 Oct 09:52:01 INFO   [file.FileBlobStore] - /opt/geoserver_data/gwc/spearfish does not exist or is not writable
31 Oct 09:52:01 INFO   [file.FileBlobStore] - /opt/geoserver_data/gwc/sf_bugsites does not exist or is not writable
31 Oct 09:52:01 INFO   [gwc.layer] - Truncating TileLayer for layer group 'spearfish' due to a change in its layers or styles
31 Oct 09:52:01 INFO   [file.FileBlobStore] - /opt/geoserver_data/gwc/spearfish does not exist or is not writable
31 Oct 09:52:01 INFO   [file.FileBlobStore] - /opt/geoserver_data/gwc/spearfish does not exist or is not writable
31 Oct 09:52:01 INFO   [file.FileBlobStore] - /opt/geoserver_data/gwc/sf_restricted does not exist or is not writable
31 Oct 09:52:01 INFO   [gwc.layer] - Truncating TileLayer for layer group 'spearfish' due to a change in its layers or styles
31 Oct 09:52:01 INFO   [file.FileBlobStore] - /opt/geoserver_data/gwc/spearfish does not exist or is not writable
31 Oct 09:52:01 INFO   [file.FileBlobStore] - /opt/geoserver_data/gwc/spearfish does not exist or is not writable
31 Oct 09:52:01 INFO   [file.FileBlobStore] - /opt/geoserver_data/gwc/sf_roads does not exist or is not writable
31 Oct 09:52:01 INFO   [file.FileBlobStore] - /opt/geoserver_data/gwc/spearfish does not exist or is not writable
31 Oct 09:52:01 INFO   [file.FileBlobStore] - /opt/geoserver_data/gwc/sf_streams does not exist or is not writable
31 Oct 09:52:01 INFO   [gwc.layer] - Truncating TileLayer for layer group 'tiger-ny' due to a change in its layers or styles
31 Oct 09:52:01 INFO   [file.FileBlobStore] - /opt/geoserver_data/gwc/tiger-ny does not exist or is not writable
31 Oct 09:52:01 INFO   [file.FileBlobStore] - /opt/geoserver_data/gwc/tiger-ny does not exist or is not writable
31 Oct 09:52:01 INFO   [file.FileBlobStore] - /opt/geoserver_data/gwc/tiger_giant_polygon does not exist or is not writable
31 Oct 09:52:01 INFO   [gwc.layer] - Truncating TileLayer for layer group 'tiger-ny' due to a change in its layers or styles
31 Oct 09:52:01 INFO   [file.FileBlobStore] - /opt/geoserver_data/gwc/tiger-ny does not exist or is not writable
31 Oct 09:52:01 INFO   [file.FileBlobStore] - /opt/geoserver_data/gwc/tiger-ny does not exist or is not writable
31 Oct 09:52:01 INFO   [file.FileBlobStore] - /opt/geoserver_data/gwc/tiger_poi does not exist or is not writable
31 Oct 09:52:01 INFO   [gwc.layer] - Truncating TileLayer for layer group 'tiger-ny' due to a change in its layers or styles
31 Oct 09:52:01 INFO   [file.FileBlobStore] - /opt/geoserver_data/gwc/tiger-ny does not exist or is not writable
31 Oct 09:52:01 INFO   [file.FileBlobStore] - /opt/geoserver_data/gwc/tiger-ny does not exist or is not writable
31 Oct 09:52:01 INFO   [file.FileBlobStore] - /opt/geoserver_data/gwc/tiger_poly_landmarks does not exist or is not writable
31 Oct 09:52:01 INFO   [file.FileBlobStore] - /opt/geoserver_data/gwc/tiger-ny does not exist or is not writable
31 Oct 09:52:01 INFO   [file.FileBlobStore] - /opt/geoserver_data/gwc/tiger_tiger_roads does not exist or is not writable
31 Oct 09:52:01 INFO   [file.FileBlobStore] - /opt/geoserver_data/gwc/topp_states does not exist or is not writable
31 Oct 09:52:01 INFO   [gwc.layer] - Truncating TileLayer for layer group 'tasmania' due to a change in its layers or styles
31 Oct 09:52:01 INFO   [file.FileBlobStore] - /opt/geoserver_data/gwc/tasmania does not exist or is not writable
31 Oct 09:52:01 INFO   [file.FileBlobStore] - /opt/geoserver_data/gwc/tasmania does not exist or is not writable
31 Oct 09:52:01 INFO   [file.FileBlobStore] - /opt/geoserver_data/gwc/topp_tasmania_cities does not exist or is not writable
31 Oct 09:52:01 INFO   [gwc.layer] - Truncating TileLayer for layer group 'tasmania' due to a change in its layers or styles
31 Oct 09:52:01 INFO   [file.FileBlobStore] - /opt/geoserver_data/gwc/tasmania does not exist or is not writable
31 Oct 09:52:01 INFO   [file.FileBlobStore] - /opt/geoserver_data/gwc/tasmania does not exist or is not writable
31 Oct 09:52:01 INFO   [file.FileBlobStore] - /opt/geoserver_data/gwc/topp_tasmania_roads does not exist or is not writable
31 Oct 09:52:01 INFO   [gwc.layer] - Truncating TileLayer for layer group 'tasmania' due to a change in its layers or styles
31 Oct 09:52:01 INFO   [file.FileBlobStore] - /opt/geoserver_data/gwc/tasmania does not exist or is not writable
31 Oct 09:52:01 INFO   [file.FileBlobStore] - /opt/geoserver_data/gwc/tasmania does not exist or is not writable
31 Oct 09:52:01 INFO   [file.FileBlobStore] - /opt/geoserver_data/gwc/topp_tasmania_state_boundaries does not exist or is not writable
31 Oct 09:52:01 INFO   [file.FileBlobStore] - /opt/geoserver_data/gwc/tasmania does not exist or is not writable
31 Oct 09:52:01 INFO   [file.FileBlobStore] - /opt/geoserver_data/gwc/topp_tasmania_water_bodies does not exist or is not writable
31 Oct 09:52:01 CONFIG [platform.resource] - Notifying ENTRY_MODIFY change on /opt/geoserver_data/gwc-layers. Created: 0, removed: 28, modified: 0
31 Oct 09:52:01 CONFIG [platform.resource] - Notifying ENTRY_DELETE change on /opt/geoserver_data/workspaces/ne/styles/countries_mapcolor9.sld. Created: 0, removed: 0, modified: 0
31 Oct 09:52:01 CONFIG [platform.resource] - Notifying ENTRY_DELETE change on /opt/geoserver_data/workspaces/ne/styles/countries.sld. Created: 0, removed: 0, modified: 0
31 Oct 09:52:01 CONFIG [platform.resource] - Notifying ENTRY_DELETE change on /opt/geoserver_data/workspaces/ne/styles/disputed.sld. Created: 0, removed: 0, modified: 0
31 Oct 09:52:01 CONFIG [platform.resource] - Notifying ENTRY_DELETE change on /opt/geoserver_data/workspaces/ne/styles/coastline.sld. Created: 0, removed: 0, modified: 0
31 Oct 09:52:01 CONFIG [platform.resource] - Notifying ENTRY_DELETE change on /opt/geoserver_data/workspaces/ne/styles/boundary_lines.sld. Created: 0, removed: 0, modified: 0
31 Oct 09:52:01 CONFIG [platform.resource] - Notifying ENTRY_DELETE change on /opt/geoserver_data/workspaces/ne/styles/populated_places.sld. Created: 0, removed: 0, modified: 0
31 Oct 10:13:06 WARN   [data.store] - Error obtaining new data store
java.io.IOException
	at org.geoserver.catalog.ResourcePool.getDataStore(ResourcePool.java:678)
	at org.geoserver.catalog.impl.DataStoreInfoImpl.getDataStore(DataStoreInfoImpl.java:34)
	at org.geoserver.web.data.store.DataAccessNewPage.onSaveDataStore(DataAccessNewPage.java:90)
	at org.geoserver.web.data.store.AbstractDataAccessPage$1.onSubmit(AbstractDataAccessPage.java:176)
	at org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink$1.onSubmit(AjaxSubmitLink.java:111)
	at org.apache.wicket.ajax.form.AjaxFormSubmitBehavior$AjaxFormSubmitter.onSubmit(AjaxFormSubmitBehavior.java:218)
	at org.apache.wicket.markup.html.form.Form.delegateSubmit(Form.java:1312)
	at org.apache.wicket.markup.html.form.Form.process(Form.java:976)
	at org.apache.wicket.markup.html.form.Form.onFormSubmitted(Form.java:797)
	at org.apache.wicket.ajax.form.AjaxFormSubmitBehavior.onEvent(AjaxFormSubmitBehavior.java:174)
	at org.apache.wicket.ajax.AjaxEventBehavior.respond(AjaxEventBehavior.java:155)
	at org.apache.wicket.ajax.AbstractDefaultAjaxBehavior.onRequest(AbstractDefaultAjaxBehavior.java:601)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.apache.wicket.RequestListenerInterface.internalInvoke(RequestListenerInterface.java:258)
	at org.apache.wicket.RequestListenerInterface.invoke(RequestListenerInterface.java:241)
	at org.apache.wicket.core.request.handler.ListenerInterfaceRequestHandler.invokeListener(ListenerInterfaceRequestHandler.java:248)
	at org.apache.wicket.core.request.handler.ListenerInterfaceRequestHandler.respond(ListenerInterfaceRequestHandler.java:234)
	at org.apache.wicket.request.cycle.RequestCycle$HandlerExecutor.respond(RequestCycle.java:895)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:64)
	at org.apache.wicket.request.cycle.RequestCycle.execute(RequestCycle.java:265)
	at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:222)
	at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:293)
	at org.apache.wicket.protocol.http.WicketFilter.processRequestCycle(WicketFilter.java:261)
	at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:203)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:159)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:166)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:122)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:110)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:101)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:141)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:660)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:383)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:937)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.lang.RuntimeException: Unable to obtain connection: Cannot create PoolableConnectionFactory (Connection to localhost:8888 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.)
	at org.geotools.jdbc.JDBCDataStore.createConnection(JDBCDataStore.java:2343)
	at org.geotools.jdbc.JDBCDataStore.getConnection(JDBCDataStore.java:2285)
	at org.geotools.data.postgis.PostgisNGDataStoreFactory.createDataStoreInternal(PostgisNGDataStoreFactory.java:274)
	at org.geotools.jdbc.JDBCDataStoreFactory.createDataStore(JDBCDataStoreFactory.java:389)
	at org.geotools.jdbc.JDBCDataStoreFactory.createDataStore(JDBCDataStoreFactory.java:47)
	at org.vfny.geoserver.util.DataStoreUtils.getDataAccess(DataStoreUtils.java:76)
	at org.geoserver.catalog.ResourcePool.createDataAccess(ResourcePool.java:772)
	at org.geoserver.catalog.ResourcePool.getDataStore(ResourcePool.java:649)
	... 133 more
Caused by: org.apache.commons.dbcp.SQLNestedException: Cannot create PoolableConnectionFactory (Connection to localhost:8888 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.)
	at org.apache.commons.dbcp.BasicDataSource.createPoolableConnectionFactory(BasicDataSource.java:1549)
	at org.apache.commons.dbcp.BasicDataSource.createDataSource(BasicDataSource.java:1388)
	at org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:1044)
	at org.geotools.data.jdbc.datasource.AbstractManageableDataSource.getConnection(AbstractManageableDataSource.java:42)
	at org.geotools.jdbc.JDBCDataStore.createConnection(JDBCDataStore.java:2327)
	... 140 more
Caused by: org.postgresql.util.PSQLException: Connection to localhost:8888 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:346)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:273)
	at org.postgresql.Driver.makeConnection(Driver.java:446)
	at org.postgresql.Driver.connect(Driver.java:298)
	at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java:38)
	at org.apache.commons.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:582)
	at org.apache.commons.dbcp.BasicDataSource.validateConnectionFactory(BasicDataSource.java:1556)
	at org.apache.commons.dbcp.BasicDataSource.createPoolableConnectionFactory(BasicDataSource.java:1545)
	... 144 more
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at org.postgresql.core.PGStream.createSocket(PGStream.java:243)
	at org.postgresql.core.PGStream.<init>(PGStream.java:98)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:136)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:262)
	... 152 more
31 Oct 10:13:06 ERROR  [geotools.jdbc] - There's code using JDBC based datastore and not disposing them. This may lead to temporary loss of database connections. Please make sure all data access code calls DataStore.dispose() before freeing all references to it
31 Oct 10:13:47 WARN   [data.store] - Error obtaining new data store
java.io.IOException
	at org.geoserver.catalog.ResourcePool.getDataStore(ResourcePool.java:678)
	at org.geoserver.catalog.impl.DataStoreInfoImpl.getDataStore(DataStoreInfoImpl.java:34)
	at org.geoserver.web.data.store.DataAccessNewPage.onSaveDataStore(DataAccessNewPage.java:90)
	at org.geoserver.web.data.store.AbstractDataAccessPage$1.onSubmit(AbstractDataAccessPage.java:176)
	at org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink$1.onSubmit(AjaxSubmitLink.java:111)
	at org.apache.wicket.ajax.form.AjaxFormSubmitBehavior$AjaxFormSubmitter.onSubmit(AjaxFormSubmitBehavior.java:218)
	at org.apache.wicket.markup.html.form.Form.delegateSubmit(Form.java:1312)
	at org.apache.wicket.markup.html.form.Form.process(Form.java:976)
	at org.apache.wicket.markup.html.form.Form.onFormSubmitted(Form.java:797)
	at org.apache.wicket.ajax.form.AjaxFormSubmitBehavior.onEvent(AjaxFormSubmitBehavior.java:174)
	at org.apache.wicket.ajax.AjaxEventBehavior.respond(AjaxEventBehavior.java:155)
	at org.apache.wicket.ajax.AbstractDefaultAjaxBehavior.onRequest(AbstractDefaultAjaxBehavior.java:601)
	at jdk.internal.reflect.GeneratedMethodAccessor427.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.apache.wicket.RequestListenerInterface.internalInvoke(RequestListenerInterface.java:258)
	at org.apache.wicket.RequestListenerInterface.invoke(RequestListenerInterface.java:241)
	at org.apache.wicket.core.request.handler.ListenerInterfaceRequestHandler.invokeListener(ListenerInterfaceRequestHandler.java:248)
	at org.apache.wicket.core.request.handler.ListenerInterfaceRequestHandler.respond(ListenerInterfaceRequestHandler.java:234)
	at org.apache.wicket.request.cycle.RequestCycle$HandlerExecutor.respond(RequestCycle.java:895)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:64)
	at org.apache.wicket.request.cycle.RequestCycle.execute(RequestCycle.java:265)
	at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:222)
	at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:293)
	at org.apache.wicket.protocol.http.WicketFilter.processRequestCycle(WicketFilter.java:261)
	at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:203)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:159)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:166)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:122)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:110)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:101)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:141)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:660)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:383)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:937)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.lang.RuntimeException: Unable to obtain connection: Cannot create PoolableConnectionFactory (Connection to localhost:8888 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.)
	at org.geotools.jdbc.JDBCDataStore.createConnection(JDBCDataStore.java:2343)
	at org.geotools.jdbc.JDBCDataStore.getConnection(JDBCDataStore.java:2285)
	at org.geotools.data.postgis.PostgisNGDataStoreFactory.createDataStoreInternal(PostgisNGDataStoreFactory.java:274)
	at org.geotools.jdbc.JDBCDataStoreFactory.createDataStore(JDBCDataStoreFactory.java:389)
	at org.geotools.jdbc.JDBCDataStoreFactory.createDataStore(JDBCDataStoreFactory.java:47)
	at org.vfny.geoserver.util.DataStoreUtils.getDataAccess(DataStoreUtils.java:76)
	at org.geoserver.catalog.ResourcePool.createDataAccess(ResourcePool.java:772)
	at org.geoserver.catalog.ResourcePool.getDataStore(ResourcePool.java:649)
	... 132 more
Caused by: org.apache.commons.dbcp.SQLNestedException: Cannot create PoolableConnectionFactory (Connection to localhost:8888 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.)
	at org.apache.commons.dbcp.BasicDataSource.createPoolableConnectionFactory(BasicDataSource.java:1549)
	at org.apache.commons.dbcp.BasicDataSource.createDataSource(BasicDataSource.java:1388)
	at org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:1044)
	at org.geotools.data.jdbc.datasource.AbstractManageableDataSource.getConnection(AbstractManageableDataSource.java:42)
	at org.geotools.jdbc.JDBCDataStore.createConnection(JDBCDataStore.java:2327)
	... 139 more
Caused by: org.postgresql.util.PSQLException: Connection to localhost:8888 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:346)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:273)
	at org.postgresql.Driver.makeConnection(Driver.java:446)
	at org.postgresql.Driver.connect(Driver.java:298)
	at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java:38)
	at org.apache.commons.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:582)
	at org.apache.commons.dbcp.BasicDataSource.validateConnectionFactory(BasicDataSource.java:1556)
	at org.apache.commons.dbcp.BasicDataSource.createPoolableConnectionFactory(BasicDataSource.java:1545)
	... 143 more
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at org.postgresql.core.PGStream.createSocket(PGStream.java:243)
	at org.postgresql.core.PGStream.<init>(PGStream.java:98)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:136)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:262)
	... 151 more
31 Oct 10:13:47 ERROR  [geotools.jdbc] - There's code using JDBC based datastore and not disposing them. This may lead to temporary loss of database connections. Please make sure all data access code calls DataStore.dispose() before freeing all references to it
31 Oct 10:13:54 WARN   [data.store] - Error obtaining new data store
java.io.IOException
	at org.geoserver.catalog.ResourcePool.getDataStore(ResourcePool.java:678)
	at org.geoserver.catalog.impl.DataStoreInfoImpl.getDataStore(DataStoreInfoImpl.java:34)
	at org.geoserver.web.data.store.DataAccessNewPage.onSaveDataStore(DataAccessNewPage.java:90)
	at org.geoserver.web.data.store.AbstractDataAccessPage$1.onSubmit(AbstractDataAccessPage.java:176)
	at org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink$1.onSubmit(AjaxSubmitLink.java:111)
	at org.apache.wicket.ajax.form.AjaxFormSubmitBehavior$AjaxFormSubmitter.onSubmit(AjaxFormSubmitBehavior.java:218)
	at org.apache.wicket.markup.html.form.Form.delegateSubmit(Form.java:1312)
	at org.apache.wicket.markup.html.form.Form.process(Form.java:976)
	at org.apache.wicket.markup.html.form.Form.onFormSubmitted(Form.java:797)
	at org.apache.wicket.ajax.form.AjaxFormSubmitBehavior.onEvent(AjaxFormSubmitBehavior.java:174)
	at org.apache.wicket.ajax.AjaxEventBehavior.respond(AjaxEventBehavior.java:155)
	at org.apache.wicket.ajax.AbstractDefaultAjaxBehavior.onRequest(AbstractDefaultAjaxBehavior.java:601)
	at jdk.internal.reflect.GeneratedMethodAccessor427.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.apache.wicket.RequestListenerInterface.internalInvoke(RequestListenerInterface.java:258)
	at org.apache.wicket.RequestListenerInterface.invoke(RequestListenerInterface.java:241)
	at org.apache.wicket.core.request.handler.ListenerInterfaceRequestHandler.invokeListener(ListenerInterfaceRequestHandler.java:248)
	at org.apache.wicket.core.request.handler.ListenerInterfaceRequestHandler.respond(ListenerInterfaceRequestHandler.java:234)
	at org.apache.wicket.request.cycle.RequestCycle$HandlerExecutor.respond(RequestCycle.java:895)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:64)
	at org.apache.wicket.request.cycle.RequestCycle.execute(RequestCycle.java:265)
	at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:222)
	at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:293)
	at org.apache.wicket.protocol.http.WicketFilter.processRequestCycle(WicketFilter.java:261)
	at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:203)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:159)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:166)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:122)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:110)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:101)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:141)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:660)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:383)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:937)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.lang.RuntimeException: Unable to obtain connection: Cannot create PoolableConnectionFactory (Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.)
	at org.geotools.jdbc.JDBCDataStore.createConnection(JDBCDataStore.java:2343)
	at org.geotools.jdbc.JDBCDataStore.getConnection(JDBCDataStore.java:2285)
	at org.geotools.data.postgis.PostgisNGDataStoreFactory.createDataStoreInternal(PostgisNGDataStoreFactory.java:274)
	at org.geotools.jdbc.JDBCDataStoreFactory.createDataStore(JDBCDataStoreFactory.java:389)
	at org.geotools.jdbc.JDBCDataStoreFactory.createDataStore(JDBCDataStoreFactory.java:47)
	at org.vfny.geoserver.util.DataStoreUtils.getDataAccess(DataStoreUtils.java:76)
	at org.geoserver.catalog.ResourcePool.createDataAccess(ResourcePool.java:772)
	at org.geoserver.catalog.ResourcePool.getDataStore(ResourcePool.java:649)
	... 132 more
Caused by: org.apache.commons.dbcp.SQLNestedException: Cannot create PoolableConnectionFactory (Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.)
	at org.apache.commons.dbcp.BasicDataSource.createPoolableConnectionFactory(BasicDataSource.java:1549)
	at org.apache.commons.dbcp.BasicDataSource.createDataSource(BasicDataSource.java:1388)
	at org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:1044)
	at org.geotools.data.jdbc.datasource.AbstractManageableDataSource.getConnection(AbstractManageableDataSource.java:42)
	at org.geotools.jdbc.JDBCDataStore.createConnection(JDBCDataStore.java:2327)
	... 139 more
Caused by: org.postgresql.util.PSQLException: Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:346)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:273)
	at org.postgresql.Driver.makeConnection(Driver.java:446)
	at org.postgresql.Driver.connect(Driver.java:298)
	at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java:38)
	at org.apache.commons.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:582)
	at org.apache.commons.dbcp.BasicDataSource.validateConnectionFactory(BasicDataSource.java:1556)
	at org.apache.commons.dbcp.BasicDataSource.createPoolableConnectionFactory(BasicDataSource.java:1545)
	... 143 more
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at org.postgresql.core.PGStream.createSocket(PGStream.java:243)
	at org.postgresql.core.PGStream.<init>(PGStream.java:98)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:136)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:262)
	... 151 more
31 Oct 10:13:54 ERROR  [geotools.jdbc] - There's code using JDBC based datastore and not disposing them. This may lead to temporary loss of database connections. Please make sure all data access code calls DataStore.dispose() before freeing all references to it
31 Oct 10:15:03 WARN   [data.store] - Error obtaining new data store
java.io.IOException
	at org.geoserver.catalog.ResourcePool.getDataStore(ResourcePool.java:678)
	at org.geoserver.catalog.impl.DataStoreInfoImpl.getDataStore(DataStoreInfoImpl.java:34)
	at org.geoserver.web.data.store.DataAccessNewPage.onSaveDataStore(DataAccessNewPage.java:90)
	at org.geoserver.web.data.store.AbstractDataAccessPage$1.onSubmit(AbstractDataAccessPage.java:176)
	at org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink$1.onSubmit(AjaxSubmitLink.java:111)
	at org.apache.wicket.ajax.form.AjaxFormSubmitBehavior$AjaxFormSubmitter.onSubmit(AjaxFormSubmitBehavior.java:218)
	at org.apache.wicket.markup.html.form.Form.delegateSubmit(Form.java:1312)
	at org.apache.wicket.markup.html.form.Form.process(Form.java:976)
	at org.apache.wicket.markup.html.form.Form.onFormSubmitted(Form.java:797)
	at org.apache.wicket.ajax.form.AjaxFormSubmitBehavior.onEvent(AjaxFormSubmitBehavior.java:174)
	at org.apache.wicket.ajax.AjaxEventBehavior.respond(AjaxEventBehavior.java:155)
	at org.apache.wicket.ajax.AbstractDefaultAjaxBehavior.onRequest(AbstractDefaultAjaxBehavior.java:601)
	at jdk.internal.reflect.GeneratedMethodAccessor427.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.apache.wicket.RequestListenerInterface.internalInvoke(RequestListenerInterface.java:258)
	at org.apache.wicket.RequestListenerInterface.invoke(RequestListenerInterface.java:241)
	at org.apache.wicket.core.request.handler.ListenerInterfaceRequestHandler.invokeListener(ListenerInterfaceRequestHandler.java:248)
	at org.apache.wicket.core.request.handler.ListenerInterfaceRequestHandler.respond(ListenerInterfaceRequestHandler.java:234)
	at org.apache.wicket.request.cycle.RequestCycle$HandlerExecutor.respond(RequestCycle.java:895)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:64)
	at org.apache.wicket.request.cycle.RequestCycle.execute(RequestCycle.java:265)
	at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:222)
	at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:293)
	at org.apache.wicket.protocol.http.WicketFilter.processRequestCycle(WicketFilter.java:261)
	at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:203)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:159)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:166)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:122)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:110)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:101)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:141)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:660)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:383)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:937)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.lang.RuntimeException: Unable to obtain connection: Cannot create PoolableConnectionFactory (Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.)
	at org.geotools.jdbc.JDBCDataStore.createConnection(JDBCDataStore.java:2343)
	at org.geotools.jdbc.JDBCDataStore.getConnection(JDBCDataStore.java:2285)
	at org.geotools.data.postgis.PostgisNGDataStoreFactory.createDataStoreInternal(PostgisNGDataStoreFactory.java:274)
	at org.geotools.jdbc.JDBCDataStoreFactory.createDataStore(JDBCDataStoreFactory.java:389)
	at org.geotools.jdbc.JDBCDataStoreFactory.createDataStore(JDBCDataStoreFactory.java:47)
	at org.vfny.geoserver.util.DataStoreUtils.getDataAccess(DataStoreUtils.java:76)
	at org.geoserver.catalog.ResourcePool.createDataAccess(ResourcePool.java:772)
	at org.geoserver.catalog.ResourcePool.getDataStore(ResourcePool.java:649)
	... 132 more
Caused by: org.apache.commons.dbcp.SQLNestedException: Cannot create PoolableConnectionFactory (Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.)
	at org.apache.commons.dbcp.BasicDataSource.createPoolableConnectionFactory(BasicDataSource.java:1549)
	at org.apache.commons.dbcp.BasicDataSource.createDataSource(BasicDataSource.java:1388)
	at org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:1044)
	at org.geotools.data.jdbc.datasource.AbstractManageableDataSource.getConnection(AbstractManageableDataSource.java:42)
	at org.geotools.jdbc.JDBCDataStore.createConnection(JDBCDataStore.java:2327)
	... 139 more
Caused by: org.postgresql.util.PSQLException: Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:346)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:273)
	at org.postgresql.Driver.makeConnection(Driver.java:446)
	at org.postgresql.Driver.connect(Driver.java:298)
	at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java:38)
	at org.apache.commons.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:582)
	at org.apache.commons.dbcp.BasicDataSource.validateConnectionFactory(BasicDataSource.java:1556)
	at org.apache.commons.dbcp.BasicDataSource.createPoolableConnectionFactory(BasicDataSource.java:1545)
	... 143 more
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at org.postgresql.core.PGStream.createSocket(PGStream.java:243)
	at org.postgresql.core.PGStream.<init>(PGStream.java:98)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:136)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:262)
	... 151 more
31 Oct 10:15:03 ERROR  [geotools.jdbc] - There's code using JDBC based datastore and not disposing them. This may lead to temporary loss of database connections. Please make sure all data access code calls DataStore.dispose() before freeing all references to it
31 Oct 10:15:22 WARN   [data.store] - Error obtaining new data store
java.io.IOException
	at org.geoserver.catalog.ResourcePool.getDataStore(ResourcePool.java:678)
	at org.geoserver.catalog.impl.DataStoreInfoImpl.getDataStore(DataStoreInfoImpl.java:34)
	at org.geoserver.web.data.store.DataAccessNewPage.onSaveDataStore(DataAccessNewPage.java:90)
	at org.geoserver.web.data.store.AbstractDataAccessPage$1.onSubmit(AbstractDataAccessPage.java:176)
	at org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink$1.onSubmit(AjaxSubmitLink.java:111)
	at org.apache.wicket.ajax.form.AjaxFormSubmitBehavior$AjaxFormSubmitter.onSubmit(AjaxFormSubmitBehavior.java:218)
	at org.apache.wicket.markup.html.form.Form.delegateSubmit(Form.java:1312)
	at org.apache.wicket.markup.html.form.Form.process(Form.java:976)
	at org.apache.wicket.markup.html.form.Form.onFormSubmitted(Form.java:797)
	at org.apache.wicket.ajax.form.AjaxFormSubmitBehavior.onEvent(AjaxFormSubmitBehavior.java:174)
	at org.apache.wicket.ajax.AjaxEventBehavior.respond(AjaxEventBehavior.java:155)
	at org.apache.wicket.ajax.AbstractDefaultAjaxBehavior.onRequest(AbstractDefaultAjaxBehavior.java:601)
	at jdk.internal.reflect.GeneratedMethodAccessor427.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.apache.wicket.RequestListenerInterface.internalInvoke(RequestListenerInterface.java:258)
	at org.apache.wicket.RequestListenerInterface.invoke(RequestListenerInterface.java:241)
	at org.apache.wicket.core.request.handler.ListenerInterfaceRequestHandler.invokeListener(ListenerInterfaceRequestHandler.java:248)
	at org.apache.wicket.core.request.handler.ListenerInterfaceRequestHandler.respond(ListenerInterfaceRequestHandler.java:234)
	at org.apache.wicket.request.cycle.RequestCycle$HandlerExecutor.respond(RequestCycle.java:895)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:64)
	at org.apache.wicket.request.cycle.RequestCycle.execute(RequestCycle.java:265)
	at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:222)
	at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:293)
	at org.apache.wicket.protocol.http.WicketFilter.processRequestCycle(WicketFilter.java:261)
	at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:203)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:159)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:166)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:122)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:110)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:101)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:141)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:660)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:383)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:937)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.lang.RuntimeException: Unable to obtain connection: Cannot create PoolableConnectionFactory (Connection to localhost:8888 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.)
	at org.geotools.jdbc.JDBCDataStore.createConnection(JDBCDataStore.java:2343)
	at org.geotools.jdbc.JDBCDataStore.getConnection(JDBCDataStore.java:2285)
	at org.geotools.data.postgis.PostgisNGDataStoreFactory.createDataStoreInternal(PostgisNGDataStoreFactory.java:274)
	at org.geotools.jdbc.JDBCDataStoreFactory.createDataStore(JDBCDataStoreFactory.java:389)
	at org.geotools.jdbc.JDBCDataStoreFactory.createDataStore(JDBCDataStoreFactory.java:47)
	at org.vfny.geoserver.util.DataStoreUtils.getDataAccess(DataStoreUtils.java:76)
	at org.geoserver.catalog.ResourcePool.createDataAccess(ResourcePool.java:772)
	at org.geoserver.catalog.ResourcePool.getDataStore(ResourcePool.java:649)
	... 132 more
Caused by: org.apache.commons.dbcp.SQLNestedException: Cannot create PoolableConnectionFactory (Connection to localhost:8888 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.)
	at org.apache.commons.dbcp.BasicDataSource.createPoolableConnectionFactory(BasicDataSource.java:1549)
	at org.apache.commons.dbcp.BasicDataSource.createDataSource(BasicDataSource.java:1388)
	at org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:1044)
	at org.geotools.data.jdbc.datasource.AbstractManageableDataSource.getConnection(AbstractManageableDataSource.java:42)
	at org.geotools.jdbc.JDBCDataStore.createConnection(JDBCDataStore.java:2327)
	... 139 more
Caused by: org.postgresql.util.PSQLException: Connection to localhost:8888 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:346)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:273)
	at org.postgresql.Driver.makeConnection(Driver.java:446)
	at org.postgresql.Driver.connect(Driver.java:298)
	at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java:38)
	at org.apache.commons.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:582)
	at org.apache.commons.dbcp.BasicDataSource.validateConnectionFactory(BasicDataSource.java:1556)
	at org.apache.commons.dbcp.BasicDataSource.createPoolableConnectionFactory(BasicDataSource.java:1545)
	... 143 more
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at org.postgresql.core.PGStream.createSocket(PGStream.java:243)
	at org.postgresql.core.PGStream.<init>(PGStream.java:98)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:136)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:262)
	... 151 more
31 Oct 10:15:22 ERROR  [geotools.jdbc] - There's code using JDBC based datastore and not disposing them. This may lead to temporary loss of database connections. Please make sure all data access code calls DataStore.dispose() before freeing all references to it
31 Oct 10:16:17 WARN   [data.store] - Error obtaining new data store
java.io.IOException
	at org.geoserver.catalog.ResourcePool.getDataStore(ResourcePool.java:678)
	at org.geoserver.catalog.impl.DataStoreInfoImpl.getDataStore(DataStoreInfoImpl.java:34)
	at org.geoserver.web.data.store.DataAccessNewPage.onSaveDataStore(DataAccessNewPage.java:90)
	at org.geoserver.web.data.store.AbstractDataAccessPage$1.onSubmit(AbstractDataAccessPage.java:176)
	at org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink$1.onSubmit(AjaxSubmitLink.java:111)
	at org.apache.wicket.ajax.form.AjaxFormSubmitBehavior$AjaxFormSubmitter.onSubmit(AjaxFormSubmitBehavior.java:218)
	at org.apache.wicket.markup.html.form.Form.delegateSubmit(Form.java:1312)
	at org.apache.wicket.markup.html.form.Form.process(Form.java:976)
	at org.apache.wicket.markup.html.form.Form.onFormSubmitted(Form.java:797)
	at org.apache.wicket.ajax.form.AjaxFormSubmitBehavior.onEvent(AjaxFormSubmitBehavior.java:174)
	at org.apache.wicket.ajax.AjaxEventBehavior.respond(AjaxEventBehavior.java:155)
	at org.apache.wicket.ajax.AbstractDefaultAjaxBehavior.onRequest(AbstractDefaultAjaxBehavior.java:601)
	at jdk.internal.reflect.GeneratedMethodAccessor427.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.apache.wicket.RequestListenerInterface.internalInvoke(RequestListenerInterface.java:258)
	at org.apache.wicket.RequestListenerInterface.invoke(RequestListenerInterface.java:241)
	at org.apache.wicket.core.request.handler.ListenerInterfaceRequestHandler.invokeListener(ListenerInterfaceRequestHandler.java:248)
	at org.apache.wicket.core.request.handler.ListenerInterfaceRequestHandler.respond(ListenerInterfaceRequestHandler.java:234)
	at org.apache.wicket.request.cycle.RequestCycle$HandlerExecutor.respond(RequestCycle.java:895)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:64)
	at org.apache.wicket.request.cycle.RequestCycle.execute(RequestCycle.java:265)
	at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:222)
	at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:293)
	at org.apache.wicket.protocol.http.WicketFilter.processRequestCycle(WicketFilter.java:261)
	at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:203)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:159)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:166)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:122)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:110)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:101)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:141)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:660)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:383)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:937)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.lang.RuntimeException: Unable to obtain connection: Cannot create PoolableConnectionFactory (Connection to db:8888 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.)
	at org.geotools.jdbc.JDBCDataStore.createConnection(JDBCDataStore.java:2343)
	at org.geotools.jdbc.JDBCDataStore.getConnection(JDBCDataStore.java:2285)
	at org.geotools.data.postgis.PostgisNGDataStoreFactory.createDataStoreInternal(PostgisNGDataStoreFactory.java:274)
	at org.geotools.jdbc.JDBCDataStoreFactory.createDataStore(JDBCDataStoreFactory.java:389)
	at org.geotools.jdbc.JDBCDataStoreFactory.createDataStore(JDBCDataStoreFactory.java:47)
	at org.vfny.geoserver.util.DataStoreUtils.getDataAccess(DataStoreUtils.java:76)
	at org.geoserver.catalog.ResourcePool.createDataAccess(ResourcePool.java:772)
	at org.geoserver.catalog.ResourcePool.getDataStore(ResourcePool.java:649)
	... 132 more
Caused by: org.apache.commons.dbcp.SQLNestedException: Cannot create PoolableConnectionFactory (Connection to db:8888 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.)
	at org.apache.commons.dbcp.BasicDataSource.createPoolableConnectionFactory(BasicDataSource.java:1549)
	at org.apache.commons.dbcp.BasicDataSource.createDataSource(BasicDataSource.java:1388)
	at org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:1044)
	at org.geotools.data.jdbc.datasource.AbstractManageableDataSource.getConnection(AbstractManageableDataSource.java:42)
	at org.geotools.jdbc.JDBCDataStore.createConnection(JDBCDataStore.java:2327)
	... 139 more
Caused by: org.postgresql.util.PSQLException: Connection to db:8888 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:346)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:273)
	at org.postgresql.Driver.makeConnection(Driver.java:446)
	at org.postgresql.Driver.connect(Driver.java:298)
	at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java:38)
	at org.apache.commons.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:582)
	at org.apache.commons.dbcp.BasicDataSource.validateConnectionFactory(BasicDataSource.java:1556)
	at org.apache.commons.dbcp.BasicDataSource.createPoolableConnectionFactory(BasicDataSource.java:1545)
	... 143 more
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at org.postgresql.core.PGStream.createSocket(PGStream.java:243)
	at org.postgresql.core.PGStream.<init>(PGStream.java:98)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:136)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:262)
	... 151 more
31 Oct 10:16:17 ERROR  [geotools.jdbc] - There's code using JDBC based datastore and not disposing them. This may lead to temporary loss of database connections. Please make sure all data access code calls DataStore.dispose() before freeing all references to it
31 Oct 10:19:09 INFO   [geoserver.gwc] - Saving GeoSeverTileLayer bis:test
31 Oct 10:19:11 CONFIG [platform.resource] - Notifying ENTRY_MODIFY change on /opt/geoserver_data/gwc-layers. Created: 1, removed: 0, modified: 0
31 Oct 11:25:49 CONFIG [geoserver.logging] - Log4j 2 configuration set to DEFAULT_LOGGING.xml
31 Oct 11:25:51 CONFIG [gwc.config] - Will look for 'geowebcache.xml' in directory '/opt/geoserver_data/gwc'.
31 Oct 11:25:51 WARN   [config.XMLConfiguration] - GWC configuration validation error: cvc-elt.1.a: Cannot find the declaration of element 'gwcConfiguration'.
31 Oct 11:25:51 WARN   [config.XMLConfiguration] - Will try to use configuration anyway. Please check the order of declared elements against the schema.
31 Oct 11:25:51 CONFIG [org.geoserver] - GeoServer configuration lock is enabled
31 Oct 11:25:51 CONFIG [org.geoserver] - Loading catalog /opt/geoserver_data
31 Oct 11:25:51 CONFIG [org.geoserver] - Loaded style 'cite_lakes'
31 Oct 11:25:51 CONFIG [org.geoserver] - Loaded style 'capitals'
31 Oct 11:25:51 CONFIG [org.geoserver] - Loaded style 'dem'
31 Oct 11:25:51 CONFIG [org.geoserver] - Loaded style 'burg'
31 Oct 11:25:51 CONFIG [org.geoserver] - Loaded style 'generic'
31 Oct 11:25:51 CONFIG [org.geoserver] - Loaded style 'giant_polygon'
31 Oct 11:25:51 CONFIG [org.geoserver] - Loaded style 'grass'
31 Oct 11:25:51 CONFIG [org.geoserver] - Loaded style 'green'
31 Oct 11:25:51 CONFIG [org.geoserver] - Loaded style 'line'
31 Oct 11:25:51 CONFIG [org.geoserver] - Loaded style 'point'
31 Oct 11:25:51 CONFIG [org.geoserver] - Loaded style 'polygon'
31 Oct 11:25:51 CONFIG [org.geoserver] - Loaded style 'poi'
31 Oct 11:25:51 CONFIG [org.geoserver] - Loaded style 'pophatch'
31 Oct 11:25:51 CONFIG [org.geoserver] - Loaded style 'population'
31 Oct 11:25:51 CONFIG [org.geoserver] - Loaded style 'poly_landmarks'
31 Oct 11:25:51 CONFIG [org.geoserver] - Loaded style 'rain'
31 Oct 11:25:51 CONFIG [org.geoserver] - Loaded style 'raster'
31 Oct 11:25:51 CONFIG [org.geoserver] - Loaded style 'restricted'
31 Oct 11:25:51 CONFIG [org.geoserver] - Loaded style 'simple_roads'
31 Oct 11:25:51 CONFIG [org.geoserver] - Loaded style 'simple_streams'
31 Oct 11:25:51 CONFIG [org.geoserver] - Loaded style 'tiger_roads'
31 Oct 11:25:51 CONFIG [org.geoserver] - Loaded default workspace 'bis'
31 Oct 11:25:52 CONFIG [org.geoserver] - Loaded workspace 'bis'
31 Oct 11:25:52 CONFIG [org.geoserver] - Loaded data store 'bis', enabled
31 Oct 11:25:53 CONFIG [org.geoserver] - Loaded feature type 'test', enabled
31 Oct 11:25:53 CONFIG [org.geoserver] - Loaded layer 'test'
31 Oct 11:25:53 CONFIG [org.geoserver] - Read catalog in 1.713 s
31 Oct 11:25:53 CONFIG [config.XMLConfiguration] - Initializing GridSets from gwc
31 Oct 11:25:53 CONFIG [config.XMLConfiguration] - Initializing layers from gwc
31 Oct 11:25:53 CONFIG [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
31 Oct 11:25:53 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
31 Oct 11:25:53 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
31 Oct 11:25:53 CONFIG [gwc.layer] - Loaded 1 tile layers in 17.16 ms
31 Oct 11:25:53 CONFIG [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
31 Oct 11:25:53 CONFIG [storage.DefaultStorageFinder] - Found system environment variableGEOSERVER_DATA_DIR set to /opt/geoserver_data/, using it as the default prefix.
31 Oct 11:25:53 CONFIG [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
31 Oct 11:25:53 CONFIG [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
31 Oct 11:25:53 CONFIG [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
31 Oct 11:25:53 CONFIG [org.geoserver] - Loaded service 'WMTSInfoImpl--3ef31051:182c1e8b194:-8000', enabled
31 Oct 11:25:53 CONFIG [org.geoserver] - Loaded service 'wcs', enabled
31 Oct 11:25:53 CONFIG [org.geoserver] - Loaded service 'wms', enabled
31 Oct 11:25:53 CONFIG [org.geoserver] - Loaded service 'wfs', enabled
31 Oct 11:25:53 CONFIG [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
31 Oct 11:25:54 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota.xml' in directory '/opt/geoserver_data/gwc'.
31 Oct 11:25:54 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/opt/geoserver_data/gwc'.
31 Oct 11:25:54 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
31 Oct 11:25:54 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
31 Oct 11:25:56 CONFIG [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
31 Oct 11:25:56 CONFIG [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
31 Oct 11:25:57 WARN   [gce.imagemosaic] - Unable to set ordering between tiff readers spi
31 Oct 11:25:58 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
31 Oct 11:25:58 CONFIG [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
31 Oct 11:25:58 CONFIG [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
31 Oct 11:25:58 CONFIG [diskquota.DiskQuotaMonitor] - 1 layers attached to global quota 500.0 MB
31 Oct 11:25:58 CONFIG [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
31 Oct 11:25:58 CONFIG [geoserver.security] - Start reloading user/groups for service named default
31 Oct 11:25:58 CONFIG [geoserver.security] - Reloading user/groups successful for service named default
31 Oct 11:26:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 11:26:35 INFO   [geoserver.wfs] - 
Request: getCapabilities
    acceptVersions:
        version[0] = 2.0.0
    baseUrl = http://localhost:8484/geoserver/
    service = WFS
31 Oct 11:26:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 11:26:38 INFO   [wfs.xml] - Identified addresses and hostnames for local interfaces: 172.18.0.3 41c48576b9e8, 0:0:0:0:0:0:0:1%lo localhost, 127.0.0.1 localhost
31 Oct 11:26:39 INFO   [wfs.xml] - Additional aliases for local host: localhost 
31 Oct 11:26:40 INFO   [geoserver.wfs] - 
Request: describeFeatureType
    handle = GeoTools 32.0(1e7dfc3f76d52f53b7a7b0af9bc02d5a1c321535) WFS 2.0.0 DataStore @PC-0017#1
    service = WFS
    version = 2.0.0
    baseUrl = http://localhost:8484/geoserver/
    typeName[0] = {https://bis.org/bis}test
    outputFormat = application/gml+xml; version=3.2
31 Oct 11:26:42 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 11:26:42 INFO   [geoserver.gwc] - DataStoreChange: {https://bis.org/bis}test TransactionEventType[PreInsert]
31 Oct 11:26:42 INFO   [geoserver.gwc] - DataStoreChange: {https://bis.org/bis}test TransactionEventType[PostInsert]
31 Oct 11:26:42 INFO   [geoserver.wfs] - 
Request: transaction
    handle = GeoTools 32.0(1e7dfc3f76d52f53b7a7b0af9bc02d5a1c321535) WFS 2.0.0 DataStore @PC-0017#1
    service = WFS
    version = 2.0.0
    baseUrl = http://localhost:8484/geoserver/
    group[0] = wfs:abstractTransactionAction=net.opengis.wfs20.impl.InsertTypeImpl@5f6f1c73 (handle: null) (any: [SimpleFeatureImpl:test=[SimpleFeatureImpl.Attribute: geometry<geometry id=0192e253-c79d-7000-6bd5-d6c7148f1443>=POLYGON ((30.262776 59.939543, 30.262908 59.939581, 30.262941 59.939553, 30.262957 59.93954, 30.263027 59.939489, 30.262897 59.939447, 30.262776 59.939543))]], inputFormat: application/gml+xml; version=3.2, srsName: urn:ogc:def:crs:EPSG::4326)
    abstractTransactionActionGroup[0] = wfs:abstractTransactionAction=net.opengis.wfs20.impl.InsertTypeImpl@5f6f1c73 (handle: null) (any: [SimpleFeatureImpl:test=[SimpleFeatureImpl.Attribute: geometry<geometry id=0192e253-c79d-7000-6bd5-d6c7148f1443>=POLYGON ((30.262776 59.939543, 30.262908 59.939581, 30.262941 59.939553, 30.262957 59.93954, 30.263027 59.939489, 30.262897 59.939447, 30.262776 59.939543))]], inputFormat: application/gml+xml; version=3.2, srsName: urn:ogc:def:crs:EPSG::4326)
    abstractTransactionAction[0]:
        any[0] = SimpleFeatureImpl:test=[SimpleFeatureImpl.Attribute: geometry<geometry id=0192e253-c79d-7000-6bd5-d6c7148f1443>=POLYGON ((30.262776 59.939543, 30.262908 59.939581, 30.262941 59.939553, 30.262957 59.93954, 30.263027 59.939489, 30.262897 59.939447, 30.262776 59.939543))]
        inputFormat = application/gml+xml; version=3.2
        srsName = urn:ogc:def:crs:EPSG::4326
    releaseAction = ALL
31 Oct 11:26:42 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 11:26:42 INFO   [geoserver.wfs] - 
Request: getCapabilities
    acceptVersions:
        version[0] = 2.0.0
    baseUrl = http://localhost:8484/geoserver/
    service = WFS
31 Oct 11:26:43 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 11:26:43 INFO   [geoserver.wfs] - 
Request: describeFeatureType
    handle = GeoTools 32.0(1e7dfc3f76d52f53b7a7b0af9bc02d5a1c321535) WFS 2.0.0 DataStore @PC-0017#1
    service = WFS
    version = 2.0.0
    baseUrl = http://localhost:8484/geoserver/
    typeName[0] = {https://bis.org/bis}test
    outputFormat = application/gml+xml; version=3.2
31 Oct 11:26:43 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 11:26:43 INFO   [geoserver.ows] - 
org.geoserver.wfs.WFSException: Invalid value for property geometry
	at org.geoserver.wfs.UpdateElementHandler.validateValue(UpdateElementHandler.java:199)
	at org.geoserver.wfs.UpdateElementHandler.checkValidity(UpdateElementHandler.java:159)
	at org.geoserver.wfs.Transaction.execute(Transaction.java:202)
	at org.geoserver.wfs.Transaction.transaction(Transaction.java:98)
	at org.geoserver.wfs.DefaultWebFeatureService20.transaction(DefaultWebFeatureService20.java:188)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:51)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:241)
	at jdk.proxy3/jdk.proxy3.$Proxy109.transaction(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:905)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:269)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:141)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:660)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:383)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:937)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
31 Oct 11:27:21 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
31 Oct 11:27:21 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
31 Oct 11:27:21 CONFIG [gwc.layer] - Loaded 1 tile layers in 15.20 ms
31 Oct 11:27:21 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
31 Oct 11:27:21 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
31 Oct 11:27:21 CONFIG [gwc.layer] - Loaded 1 tile layers in 10.65 ms
31 Oct 11:27:22 WARN   [support.DisposableBeanAdapter] - Custom destroy method 'destroy' on bean with name 'gwcMemoryBlobStore' threw an exception: java.util.concurrent.RejectedExecutionException: Task java.util.concurrent.FutureTask@1b2c265d[Not completed, task = org.geowebcache.storage.blobstore.memory.MemoryBlobStore$BlobStoreTask@70a38e13] rejected from java.util.concurrent.ThreadPoolExecutor@1a45ad22[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1]
31 Oct 11:27:22 INFO   [geoserver.logging] - Beginning GeoServer cleanup sequence
31 Oct 11:27:41 CONFIG [geoserver.logging] - Log4j 2 configuration set to DEFAULT_LOGGING.xml
31 Oct 11:27:42 CONFIG [gwc.config] - Will look for 'geowebcache.xml' in directory '/opt/geoserver_data/gwc'.
31 Oct 11:27:43 WARN   [config.XMLConfiguration] - GWC configuration validation error: cvc-elt.1.a: Cannot find the declaration of element 'gwcConfiguration'.
31 Oct 11:27:43 WARN   [config.XMLConfiguration] - Will try to use configuration anyway. Please check the order of declared elements against the schema.
31 Oct 11:27:43 CONFIG [org.geoserver] - GeoServer configuration lock is enabled
31 Oct 11:27:43 CONFIG [org.geoserver] - Loading catalog /opt/geoserver_data
31 Oct 11:27:43 CONFIG [org.geoserver] - Loaded style 'capitals'
31 Oct 11:27:43 CONFIG [org.geoserver] - Loaded style 'dem'
31 Oct 11:27:43 CONFIG [org.geoserver] - Loaded style 'burg'
31 Oct 11:27:43 CONFIG [org.geoserver] - Loaded style 'cite_lakes'
31 Oct 11:27:43 CONFIG [org.geoserver] - Loaded style 'green'
31 Oct 11:27:43 CONFIG [org.geoserver] - Loaded style 'grass'
31 Oct 11:27:43 CONFIG [org.geoserver] - Loaded style 'giant_polygon'
31 Oct 11:27:43 CONFIG [org.geoserver] - Loaded style 'generic'
31 Oct 11:27:43 CONFIG [org.geoserver] - Loaded style 'line'
31 Oct 11:27:43 CONFIG [org.geoserver] - Loaded style 'poi'
31 Oct 11:27:43 CONFIG [org.geoserver] - Loaded style 'polygon'
31 Oct 11:27:43 CONFIG [org.geoserver] - Loaded style 'point'
31 Oct 11:27:43 CONFIG [org.geoserver] - Loaded style 'pophatch'
31 Oct 11:27:43 CONFIG [org.geoserver] - Loaded style 'poly_landmarks'
31 Oct 11:27:43 CONFIG [org.geoserver] - Loaded style 'population'
31 Oct 11:27:43 CONFIG [org.geoserver] - Loaded style 'rain'
31 Oct 11:27:43 CONFIG [org.geoserver] - Loaded style 'restricted'
31 Oct 11:27:43 CONFIG [org.geoserver] - Loaded style 'simple_roads'
31 Oct 11:27:43 CONFIG [org.geoserver] - Loaded style 'raster'
31 Oct 11:27:43 CONFIG [org.geoserver] - Loaded style 'simple_streams'
31 Oct 11:27:43 CONFIG [org.geoserver] - Loaded style 'tiger_roads'
31 Oct 11:27:43 CONFIG [org.geoserver] - Loaded default workspace 'bis'
31 Oct 11:27:43 CONFIG [org.geoserver] - Loaded workspace 'bis'
31 Oct 11:27:43 CONFIG [org.geoserver] - Loaded data store 'bis', enabled
31 Oct 11:27:44 CONFIG [org.geoserver] - Loaded feature type 'test', enabled
31 Oct 11:27:44 CONFIG [org.geoserver] - Loaded layer 'test'
31 Oct 11:27:44 CONFIG [org.geoserver] - Read catalog in 1.777 s
31 Oct 11:27:45 CONFIG [config.XMLConfiguration] - Initializing GridSets from gwc
31 Oct 11:27:45 CONFIG [config.XMLConfiguration] - Initializing layers from gwc
31 Oct 11:27:45 CONFIG [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
31 Oct 11:27:45 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
31 Oct 11:27:45 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
31 Oct 11:27:45 CONFIG [gwc.layer] - Loaded 1 tile layers in 16.29 ms
31 Oct 11:27:45 CONFIG [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
31 Oct 11:27:45 CONFIG [storage.DefaultStorageFinder] - Found system environment variableGEOSERVER_DATA_DIR set to /opt/geoserver_data/, using it as the default prefix.
31 Oct 11:27:45 CONFIG [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
31 Oct 11:27:45 CONFIG [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
31 Oct 11:27:45 CONFIG [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
31 Oct 11:27:45 CONFIG [org.geoserver] - Loaded service 'WMTSInfoImpl--3ef31051:182c1e8b194:-8000', enabled
31 Oct 11:27:45 CONFIG [org.geoserver] - Loaded service 'wcs', enabled
31 Oct 11:27:45 CONFIG [org.geoserver] - Loaded service 'wms', enabled
31 Oct 11:27:45 CONFIG [org.geoserver] - Loaded service 'wfs', enabled
31 Oct 11:27:45 CONFIG [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
31 Oct 11:27:45 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota.xml' in directory '/opt/geoserver_data/gwc'.
31 Oct 11:27:45 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/opt/geoserver_data/gwc'.
31 Oct 11:27:45 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
31 Oct 11:27:45 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
31 Oct 11:27:48 CONFIG [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
31 Oct 11:27:48 CONFIG [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
31 Oct 11:27:48 WARN   [gce.imagemosaic] - Unable to set ordering between tiff readers spi
31 Oct 11:27:49 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
31 Oct 11:27:49 CONFIG [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
31 Oct 11:27:49 CONFIG [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
31 Oct 11:27:49 CONFIG [diskquota.DiskQuotaMonitor] - 1 layers attached to global quota 500.0 MB
31 Oct 11:27:49 CONFIG [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
31 Oct 11:27:50 CONFIG [geoserver.security] - Start reloading user/groups for service named default
31 Oct 11:27:50 CONFIG [geoserver.security] - Reloading user/groups successful for service named default
31 Oct 11:28:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 11:28:03 INFO   [geoserver.wfs] - 
Request: getCapabilities
    acceptVersions:
        version[0] = 2.0.0
    baseUrl = http://localhost:8484/geoserver/
    service = WFS
31 Oct 11:28:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 11:28:07 INFO   [wfs.xml] - Identified addresses and hostnames for local interfaces: 172.18.0.3 445093afbf55, 0:0:0:0:0:0:0:1%lo localhost, 127.0.0.1 localhost
31 Oct 11:28:07 INFO   [wfs.xml] - Additional aliases for local host: localhost 
31 Oct 11:28:09 INFO   [geoserver.wfs] - 
Request: describeFeatureType
    handle = GeoTools 32.0(1e7dfc3f76d52f53b7a7b0af9bc02d5a1c321535) WFS 2.0.0 DataStore @PC-0017#1
    service = WFS
    version = 2.0.0
    baseUrl = http://localhost:8484/geoserver/
    typeName[0] = {https://bis.org/bis}test
    outputFormat = application/gml+xml; version=3.2
31 Oct 11:28:10 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 11:28:10 INFO   [geoserver.gwc] - DataStoreChange: {https://bis.org/bis}test TransactionEventType[PreInsert]
31 Oct 11:28:10 INFO   [geoserver.gwc] - DataStoreChange: {https://bis.org/bis}test TransactionEventType[PostInsert]
31 Oct 11:28:11 INFO   [geoserver.wfs] - 
Request: transaction
    handle = GeoTools 32.0(1e7dfc3f76d52f53b7a7b0af9bc02d5a1c321535) WFS 2.0.0 DataStore @PC-0017#1
    service = WFS
    version = 2.0.0
    baseUrl = http://localhost:8484/geoserver/
    group[0] = wfs:abstractTransactionAction=net.opengis.wfs20.impl.InsertTypeImpl@3fea5313 (handle: null) (any: [SimpleFeatureImpl:test=[SimpleFeatureImpl.Attribute: geometry<geometry id=0192e255-1e4b-7800-6bd5-11f42975196f>=POLYGON ((30.262776 59.939543, 30.262908 59.939581, 30.262941 59.939553, 30.262957 59.93954, 30.263027 59.939489, 30.262897 59.939447, 30.262776 59.939543))]], inputFormat: application/gml+xml; version=3.2, srsName: urn:ogc:def:crs:EPSG::4326)
    abstractTransactionActionGroup[0] = wfs:abstractTransactionAction=net.opengis.wfs20.impl.InsertTypeImpl@3fea5313 (handle: null) (any: [SimpleFeatureImpl:test=[SimpleFeatureImpl.Attribute: geometry<geometry id=0192e255-1e4b-7800-6bd5-11f42975196f>=POLYGON ((30.262776 59.939543, 30.262908 59.939581, 30.262941 59.939553, 30.262957 59.93954, 30.263027 59.939489, 30.262897 59.939447, 30.262776 59.939543))]], inputFormat: application/gml+xml; version=3.2, srsName: urn:ogc:def:crs:EPSG::4326)
    abstractTransactionAction[0]:
        any[0] = SimpleFeatureImpl:test=[SimpleFeatureImpl.Attribute: geometry<geometry id=0192e255-1e4b-7800-6bd5-11f42975196f>=POLYGON ((30.262776 59.939543, 30.262908 59.939581, 30.262941 59.939553, 30.262957 59.93954, 30.263027 59.939489, 30.262897 59.939447, 30.262776 59.939543))]
        inputFormat = application/gml+xml; version=3.2
        srsName = urn:ogc:def:crs:EPSG::4326
    releaseAction = ALL
31 Oct 11:28:11 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 11:28:11 INFO   [geoserver.wfs] - 
Request: getCapabilities
    acceptVersions:
        version[0] = 2.0.0
    baseUrl = http://localhost:8484/geoserver/
    service = WFS
31 Oct 11:28:11 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 11:28:11 INFO   [geoserver.wfs] - 
Request: describeFeatureType
    handle = GeoTools 32.0(1e7dfc3f76d52f53b7a7b0af9bc02d5a1c321535) WFS 2.0.0 DataStore @PC-0017#1
    service = WFS
    version = 2.0.0
    baseUrl = http://localhost:8484/geoserver/
    typeName[0] = {https://bis.org/bis}test
    outputFormat = application/gml+xml; version=3.2
31 Oct 11:28:11 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 11:28:11 INFO   [geoserver.ows] - 
org.geoserver.wfs.WFSException: Invalid value for property geometry
	at org.geoserver.wfs.UpdateElementHandler.validateValue(UpdateElementHandler.java:199)
	at org.geoserver.wfs.UpdateElementHandler.checkValidity(UpdateElementHandler.java:159)
	at org.geoserver.wfs.Transaction.execute(Transaction.java:202)
	at org.geoserver.wfs.Transaction.transaction(Transaction.java:98)
	at org.geoserver.wfs.DefaultWebFeatureService20.transaction(DefaultWebFeatureService20.java:188)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:51)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:241)
	at jdk.proxy3/jdk.proxy3.$Proxy109.transaction(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:905)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:269)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:141)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:660)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:383)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:937)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
31 Oct 11:40:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 11:40:01 INFO   [geoserver.wfs] - 
Request: getCapabilities
    acceptVersions:
        version[0] = 2.0.0
    baseUrl = http://localhost:8484/geoserver/
    service = WFS
31 Oct 11:40:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 11:40:03 INFO   [geoserver.wfs] - 
Request: describeFeatureType
    handle = GeoTools 32.0(1e7dfc3f76d52f53b7a7b0af9bc02d5a1c321535) WFS 2.0.0 DataStore @PC-0017#1
    service = WFS
    version = 2.0.0
    baseUrl = http://localhost:8484/geoserver/
    typeName[0] = {https://bis.org/bis}test
    outputFormat = application/gml+xml; version=3.2
31 Oct 11:40:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 11:40:05 INFO   [geoserver.gwc] - DataStoreChange: {https://bis.org/bis}test TransactionEventType[PreInsert]
31 Oct 11:40:05 INFO   [geoserver.gwc] - DataStoreChange: {https://bis.org/bis}test TransactionEventType[PostInsert]
31 Oct 11:40:05 INFO   [geoserver.wfs] - 
Request: transaction
    handle = GeoTools 32.0(1e7dfc3f76d52f53b7a7b0af9bc02d5a1c321535) WFS 2.0.0 DataStore @PC-0017#1
    service = WFS
    version = 2.0.0
    baseUrl = http://localhost:8484/geoserver/
    group[0] = wfs:abstractTransactionAction=net.opengis.wfs20.impl.InsertTypeImpl@736654b8 (handle: null) (any: [SimpleFeatureImpl:test=[SimpleFeatureImpl.Attribute: geometry<geometry id=0192e260-13fc-7300-6bd5-aa20a1b41bd6>=POLYGON ((30.262776 59.939543, 30.262908 59.939581, 30.262941 59.939553, 30.262957 59.93954, 30.263027 59.939489, 30.262897 59.939447, 30.262776 59.939543))]], inputFormat: application/gml+xml; version=3.2, srsName: urn:ogc:def:crs:EPSG::4326)
    abstractTransactionActionGroup[0] = wfs:abstractTransactionAction=net.opengis.wfs20.impl.InsertTypeImpl@736654b8 (handle: null) (any: [SimpleFeatureImpl:test=[SimpleFeatureImpl.Attribute: geometry<geometry id=0192e260-13fc-7300-6bd5-aa20a1b41bd6>=POLYGON ((30.262776 59.939543, 30.262908 59.939581, 30.262941 59.939553, 30.262957 59.93954, 30.263027 59.939489, 30.262897 59.939447, 30.262776 59.939543))]], inputFormat: application/gml+xml; version=3.2, srsName: urn:ogc:def:crs:EPSG::4326)
    abstractTransactionAction[0]:
        any[0] = SimpleFeatureImpl:test=[SimpleFeatureImpl.Attribute: geometry<geometry id=0192e260-13fc-7300-6bd5-aa20a1b41bd6>=POLYGON ((30.262776 59.939543, 30.262908 59.939581, 30.262941 59.939553, 30.262957 59.93954, 30.263027 59.939489, 30.262897 59.939447, 30.262776 59.939543))]
        inputFormat = application/gml+xml; version=3.2
        srsName = urn:ogc:def:crs:EPSG::4326
    releaseAction = ALL
31 Oct 11:40:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 11:40:05 INFO   [geoserver.wfs] - 
Request: getCapabilities
    acceptVersions:
        version[0] = 2.0.0
    baseUrl = http://localhost:8484/geoserver/
    service = WFS
31 Oct 11:40:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 11:40:05 INFO   [geoserver.wfs] - 
Request: describeFeatureType
    handle = GeoTools 32.0(1e7dfc3f76d52f53b7a7b0af9bc02d5a1c321535) WFS 2.0.0 DataStore @PC-0017#1
    service = WFS
    version = 2.0.0
    baseUrl = http://localhost:8484/geoserver/
    typeName[0] = {https://bis.org/bis}test
    outputFormat = application/gml+xml; version=3.2
31 Oct 11:40:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 11:40:06 INFO   [geoserver.ows] - 
org.geoserver.wfs.WFSException: Invalid value for property geometry
	at org.geoserver.wfs.UpdateElementHandler.validateValue(UpdateElementHandler.java:199)
	at org.geoserver.wfs.UpdateElementHandler.checkValidity(UpdateElementHandler.java:159)
	at org.geoserver.wfs.Transaction.execute(Transaction.java:202)
	at org.geoserver.wfs.Transaction.transaction(Transaction.java:98)
	at org.geoserver.wfs.DefaultWebFeatureService20.transaction(DefaultWebFeatureService20.java:188)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:51)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:241)
	at jdk.proxy3/jdk.proxy3.$Proxy109.transaction(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:905)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:269)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:141)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:660)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:383)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:937)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
31 Oct 11:43:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 11:43:14 INFO   [geoserver.wfs] - 
Request: getCapabilities
    acceptVersions:
        version[0] = 2.0.0
    baseUrl = http://localhost:8484/geoserver/
    service = WFS
31 Oct 11:43:17 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 11:43:17 INFO   [geoserver.wfs] - 
Request: describeFeatureType
    handle = GeoTools 32.0(1e7dfc3f76d52f53b7a7b0af9bc02d5a1c321535) WFS 2.0.0 DataStore @PC-0017#1
    service = WFS
    version = 2.0.0
    baseUrl = http://localhost:8484/geoserver/
    typeName[0] = {https://bis.org/bis}test
    outputFormat = application/gml+xml; version=3.2
31 Oct 11:43:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 11:43:18 INFO   [geoserver.gwc] - DataStoreChange: {https://bis.org/bis}test TransactionEventType[PreInsert]
31 Oct 11:43:18 INFO   [geoserver.gwc] - DataStoreChange: {https://bis.org/bis}test TransactionEventType[PostInsert]
31 Oct 11:43:18 INFO   [geoserver.wfs] - 
Request: transaction
    handle = GeoTools 32.0(1e7dfc3f76d52f53b7a7b0af9bc02d5a1c321535) WFS 2.0.0 DataStore @PC-0017#1
    service = WFS
    version = 2.0.0
    baseUrl = http://localhost:8484/geoserver/
    group[0] = wfs:abstractTransactionAction=net.opengis.wfs20.impl.InsertTypeImpl@31ed0786 (handle: null) (any: [SimpleFeatureImpl:test=[SimpleFeatureImpl.Attribute: geometry<geometry id=0192e263-05ea-7600-6bd5-eb18d6b9c423>=POLYGON ((30.262776 59.939543, 30.262908 59.939581, 30.262941 59.939553, 30.262957 59.93954, 30.263027 59.939489, 30.262897 59.939447, 30.262776 59.939543))]], inputFormat: application/gml+xml; version=3.2, srsName: urn:ogc:def:crs:EPSG::4326)
    abstractTransactionActionGroup[0] = wfs:abstractTransactionAction=net.opengis.wfs20.impl.InsertTypeImpl@31ed0786 (handle: null) (any: [SimpleFeatureImpl:test=[SimpleFeatureImpl.Attribute: geometry<geometry id=0192e263-05ea-7600-6bd5-eb18d6b9c423>=POLYGON ((30.262776 59.939543, 30.262908 59.939581, 30.262941 59.939553, 30.262957 59.93954, 30.263027 59.939489, 30.262897 59.939447, 30.262776 59.939543))]], inputFormat: application/gml+xml; version=3.2, srsName: urn:ogc:def:crs:EPSG::4326)
    abstractTransactionAction[0]:
        any[0] = SimpleFeatureImpl:test=[SimpleFeatureImpl.Attribute: geometry<geometry id=0192e263-05ea-7600-6bd5-eb18d6b9c423>=POLYGON ((30.262776 59.939543, 30.262908 59.939581, 30.262941 59.939553, 30.262957 59.93954, 30.263027 59.939489, 30.262897 59.939447, 30.262776 59.939543))]
        inputFormat = application/gml+xml; version=3.2
        srsName = urn:ogc:def:crs:EPSG::4326
    releaseAction = ALL
31 Oct 11:43:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 11:43:18 INFO   [geoserver.wfs] - 
Request: getCapabilities
    acceptVersions:
        version[0] = 2.0.0
    baseUrl = http://localhost:8484/geoserver/
    service = WFS
31 Oct 11:43:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 11:43:18 INFO   [geoserver.wfs] - 
Request: describeFeatureType
    handle = GeoTools 32.0(1e7dfc3f76d52f53b7a7b0af9bc02d5a1c321535) WFS 2.0.0 DataStore @PC-0017#1
    service = WFS
    version = 2.0.0
    baseUrl = http://localhost:8484/geoserver/
    typeName[0] = {https://bis.org/bis}test
    outputFormat = application/gml+xml; version=3.2
31 Oct 11:43:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 11:43:18 INFO   [geoserver.ows] - 
org.geoserver.wfs.WFSException: Invalid value for property geometry
	at org.geoserver.wfs.UpdateElementHandler.validateValue(UpdateElementHandler.java:199)
	at org.geoserver.wfs.UpdateElementHandler.checkValidity(UpdateElementHandler.java:159)
	at org.geoserver.wfs.Transaction.execute(Transaction.java:202)
	at org.geoserver.wfs.Transaction.transaction(Transaction.java:98)
	at org.geoserver.wfs.DefaultWebFeatureService20.transaction(DefaultWebFeatureService20.java:188)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:51)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:241)
	at jdk.proxy3/jdk.proxy3.$Proxy109.transaction(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:905)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:269)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:141)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:660)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:383)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:937)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
31 Oct 11:47:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 11:47:01 INFO   [geoserver.wfs] - 
Request: getCapabilities
    acceptVersions:
        version[0] = 2.0.0
    baseUrl = http://localhost:8484/geoserver/
    service = WFS
31 Oct 11:47:04 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 11:47:04 INFO   [geoserver.wfs] - 
Request: describeFeatureType
    handle = GeoTools 32.0(1e7dfc3f76d52f53b7a7b0af9bc02d5a1c321535) WFS 2.0.0 DataStore @PC-0017#1
    service = WFS
    version = 2.0.0
    baseUrl = http://localhost:8484/geoserver/
    typeName[0] = {https://bis.org/bis}test
    outputFormat = application/gml+xml; version=3.2
31 Oct 11:47:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 11:47:05 INFO   [geoserver.gwc] - DataStoreChange: {https://bis.org/bis}test TransactionEventType[PreInsert]
31 Oct 11:47:05 INFO   [geoserver.gwc] - DataStoreChange: {https://bis.org/bis}test TransactionEventType[PostInsert]
31 Oct 11:47:05 INFO   [geoserver.wfs] - 
Request: transaction
    handle = GeoTools 32.0(1e7dfc3f76d52f53b7a7b0af9bc02d5a1c321535) WFS 2.0.0 DataStore @PC-0017#1
    service = WFS
    version = 2.0.0
    baseUrl = http://localhost:8484/geoserver/
    group[0] = wfs:abstractTransactionAction=net.opengis.wfs20.impl.InsertTypeImpl@7627b8a7 (handle: null) (any: [SimpleFeatureImpl:test=[SimpleFeatureImpl.Attribute: geometry<geometry id=0192e266-7e6f-7900-6bd5-64b9ea99b905>=POLYGON ((30.262776 59.939543, 30.262908 59.939581, 30.262941 59.939553, 30.262957 59.93954, 30.263027 59.939489, 30.262897 59.939447, 30.262776 59.939543))]], inputFormat: application/gml+xml; version=3.2, srsName: urn:ogc:def:crs:EPSG::4326)
    abstractTransactionActionGroup[0] = wfs:abstractTransactionAction=net.opengis.wfs20.impl.InsertTypeImpl@7627b8a7 (handle: null) (any: [SimpleFeatureImpl:test=[SimpleFeatureImpl.Attribute: geometry<geometry id=0192e266-7e6f-7900-6bd5-64b9ea99b905>=POLYGON ((30.262776 59.939543, 30.262908 59.939581, 30.262941 59.939553, 30.262957 59.93954, 30.263027 59.939489, 30.262897 59.939447, 30.262776 59.939543))]], inputFormat: application/gml+xml; version=3.2, srsName: urn:ogc:def:crs:EPSG::4326)
    abstractTransactionAction[0]:
        any[0] = SimpleFeatureImpl:test=[SimpleFeatureImpl.Attribute: geometry<geometry id=0192e266-7e6f-7900-6bd5-64b9ea99b905>=POLYGON ((30.262776 59.939543, 30.262908 59.939581, 30.262941 59.939553, 30.262957 59.93954, 30.263027 59.939489, 30.262897 59.939447, 30.262776 59.939543))]
        inputFormat = application/gml+xml; version=3.2
        srsName = urn:ogc:def:crs:EPSG::4326
    releaseAction = ALL
31 Oct 11:47:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 11:47:05 INFO   [geoserver.wfs] - 
Request: getCapabilities
    acceptVersions:
        version[0] = 2.0.0
    baseUrl = http://localhost:8484/geoserver/
    service = WFS
31 Oct 11:47:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 11:47:06 INFO   [geoserver.wfs] - 
Request: describeFeatureType
    handle = GeoTools 32.0(1e7dfc3f76d52f53b7a7b0af9bc02d5a1c321535) WFS 2.0.0 DataStore @PC-0017#1
    service = WFS
    version = 2.0.0
    baseUrl = http://localhost:8484/geoserver/
    typeName[0] = {https://bis.org/bis}test
    outputFormat = application/gml+xml; version=3.2
31 Oct 11:47:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 11:47:06 INFO   [geoserver.ows] - 
org.geoserver.wfs.WFSException: Invalid value for property geometry
	at org.geoserver.wfs.UpdateElementHandler.validateValue(UpdateElementHandler.java:199)
	at org.geoserver.wfs.UpdateElementHandler.checkValidity(UpdateElementHandler.java:159)
	at org.geoserver.wfs.Transaction.execute(Transaction.java:202)
	at org.geoserver.wfs.Transaction.transaction(Transaction.java:98)
	at org.geoserver.wfs.DefaultWebFeatureService20.transaction(DefaultWebFeatureService20.java:188)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:51)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:241)
	at jdk.proxy3/jdk.proxy3.$Proxy109.transaction(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:905)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:269)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:141)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:660)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:383)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:937)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
31 Oct 11:47:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 11:47:55 INFO   [geoserver.wfs] - 
Request: getCapabilities
    acceptVersions:
        version[0] = 2.0.0
    baseUrl = http://localhost:8484/geoserver/
    service = WFS
31 Oct 11:47:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 11:47:57 INFO   [geoserver.wfs] - 
Request: describeFeatureType
    handle = GeoTools 32.0(1e7dfc3f76d52f53b7a7b0af9bc02d5a1c321535) WFS 2.0.0 DataStore @PC-0017#1
    service = WFS
    version = 2.0.0
    baseUrl = http://localhost:8484/geoserver/
    typeName[0] = {https://bis.org/bis}test
    outputFormat = application/gml+xml; version=3.2
31 Oct 11:47:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 11:47:59 INFO   [geoserver.gwc] - DataStoreChange: {https://bis.org/bis}test TransactionEventType[PreInsert]
31 Oct 11:47:59 INFO   [geoserver.gwc] - DataStoreChange: {https://bis.org/bis}test TransactionEventType[PostInsert]
31 Oct 11:47:59 INFO   [geoserver.wfs] - 
Request: transaction
    handle = GeoTools 32.0(1e7dfc3f76d52f53b7a7b0af9bc02d5a1c321535) WFS 2.0.0 DataStore @PC-0017#1
    service = WFS
    version = 2.0.0
    baseUrl = http://localhost:8484/geoserver/
    group[0] = wfs:abstractTransactionAction=net.opengis.wfs20.impl.InsertTypeImpl@1880e11c (handle: null) (any: [SimpleFeatureImpl:test=[SimpleFeatureImpl.Attribute: geometry<geometry id=0192e267-4fc1-7200-6bd5-9fae265f5e63>=POLYGON ((30.262776 59.939543, 30.262908 59.939581, 30.262941 59.939553, 30.262957 59.93954, 30.263027 59.939489, 30.262897 59.939447, 30.262776 59.939543))]], inputFormat: application/gml+xml; version=3.2, srsName: urn:ogc:def:crs:EPSG::4326)
    abstractTransactionActionGroup[0] = wfs:abstractTransactionAction=net.opengis.wfs20.impl.InsertTypeImpl@1880e11c (handle: null) (any: [SimpleFeatureImpl:test=[SimpleFeatureImpl.Attribute: geometry<geometry id=0192e267-4fc1-7200-6bd5-9fae265f5e63>=POLYGON ((30.262776 59.939543, 30.262908 59.939581, 30.262941 59.939553, 30.262957 59.93954, 30.263027 59.939489, 30.262897 59.939447, 30.262776 59.939543))]], inputFormat: application/gml+xml; version=3.2, srsName: urn:ogc:def:crs:EPSG::4326)
    abstractTransactionAction[0]:
        any[0] = SimpleFeatureImpl:test=[SimpleFeatureImpl.Attribute: geometry<geometry id=0192e267-4fc1-7200-6bd5-9fae265f5e63>=POLYGON ((30.262776 59.939543, 30.262908 59.939581, 30.262941 59.939553, 30.262957 59.93954, 30.263027 59.939489, 30.262897 59.939447, 30.262776 59.939543))]
        inputFormat = application/gml+xml; version=3.2
        srsName = urn:ogc:def:crs:EPSG::4326
    releaseAction = ALL
31 Oct 11:47:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 11:47:59 INFO   [geoserver.wfs] - 
Request: getCapabilities
    acceptVersions:
        version[0] = 2.0.0
    baseUrl = http://localhost:8484/geoserver/
    service = WFS
31 Oct 11:47:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 11:47:59 INFO   [geoserver.wfs] - 
Request: describeFeatureType
    handle = GeoTools 32.0(1e7dfc3f76d52f53b7a7b0af9bc02d5a1c321535) WFS 2.0.0 DataStore @PC-0017#1
    service = WFS
    version = 2.0.0
    baseUrl = http://localhost:8484/geoserver/
    typeName[0] = {https://bis.org/bis}test
    outputFormat = application/gml+xml; version=3.2
31 Oct 11:47:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 11:47:59 INFO   [geoserver.ows] - 
org.geoserver.wfs.WFSException: Invalid value for property geometry
	at org.geoserver.wfs.UpdateElementHandler.validateValue(UpdateElementHandler.java:199)
	at org.geoserver.wfs.UpdateElementHandler.checkValidity(UpdateElementHandler.java:159)
	at org.geoserver.wfs.Transaction.execute(Transaction.java:202)
	at org.geoserver.wfs.Transaction.transaction(Transaction.java:98)
	at org.geoserver.wfs.DefaultWebFeatureService20.transaction(DefaultWebFeatureService20.java:188)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:51)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:241)
	at jdk.proxy3/jdk.proxy3.$Proxy109.transaction(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:905)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:269)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:141)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:660)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:383)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:937)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
31 Oct 11:48:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 11:48:45 INFO   [geoserver.wfs] - 
Request: getCapabilities
    acceptVersions:
        version[0] = 2.0.0
    baseUrl = http://localhost:8484/geoserver/
    service = WFS
31 Oct 11:48:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 11:48:48 INFO   [geoserver.wfs] - 
Request: describeFeatureType
    handle = GeoTools 32.0(1e7dfc3f76d52f53b7a7b0af9bc02d5a1c321535) WFS 2.0.0 DataStore @PC-0017#1
    service = WFS
    version = 2.0.0
    baseUrl = http://localhost:8484/geoserver/
    typeName[0] = {https://bis.org/bis}test
    outputFormat = application/gml+xml; version=3.2
31 Oct 11:48:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 11:48:49 INFO   [geoserver.gwc] - DataStoreChange: {https://bis.org/bis}test TransactionEventType[PreInsert]
31 Oct 11:48:49 INFO   [geoserver.gwc] - DataStoreChange: {https://bis.org/bis}test TransactionEventType[PostInsert]
31 Oct 11:48:49 INFO   [geoserver.wfs] - 
Request: transaction
    handle = GeoTools 32.0(1e7dfc3f76d52f53b7a7b0af9bc02d5a1c321535) WFS 2.0.0 DataStore @PC-0017#1
    service = WFS
    version = 2.0.0
    baseUrl = http://localhost:8484/geoserver/
    group[0] = wfs:abstractTransactionAction=net.opengis.wfs20.impl.InsertTypeImpl@3f5a0e2c (handle: null) (any: [SimpleFeatureImpl:test=[SimpleFeatureImpl.Attribute: geometry<geometry id=0192e268-1444-7800-6bd5-ebe24ee192bf>=POLYGON ((30.262776 59.939543, 30.262908 59.939581, 30.262941 59.939553, 30.262957 59.93954, 30.263027 59.939489, 30.262897 59.939447, 30.262776 59.939543))]], inputFormat: application/gml+xml; version=3.2, srsName: urn:ogc:def:crs:EPSG::4326)
    abstractTransactionActionGroup[0] = wfs:abstractTransactionAction=net.opengis.wfs20.impl.InsertTypeImpl@3f5a0e2c (handle: null) (any: [SimpleFeatureImpl:test=[SimpleFeatureImpl.Attribute: geometry<geometry id=0192e268-1444-7800-6bd5-ebe24ee192bf>=POLYGON ((30.262776 59.939543, 30.262908 59.939581, 30.262941 59.939553, 30.262957 59.93954, 30.263027 59.939489, 30.262897 59.939447, 30.262776 59.939543))]], inputFormat: application/gml+xml; version=3.2, srsName: urn:ogc:def:crs:EPSG::4326)
    abstractTransactionAction[0]:
        any[0] = SimpleFeatureImpl:test=[SimpleFeatureImpl.Attribute: geometry<geometry id=0192e268-1444-7800-6bd5-ebe24ee192bf>=POLYGON ((30.262776 59.939543, 30.262908 59.939581, 30.262941 59.939553, 30.262957 59.93954, 30.263027 59.939489, 30.262897 59.939447, 30.262776 59.939543))]
        inputFormat = application/gml+xml; version=3.2
        srsName = urn:ogc:def:crs:EPSG::4326
    releaseAction = ALL
31 Oct 11:48:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 11:48:49 INFO   [geoserver.wfs] - 
Request: getCapabilities
    acceptVersions:
        version[0] = 2.0.0
    baseUrl = http://localhost:8484/geoserver/
    service = WFS
31 Oct 11:48:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 11:48:49 INFO   [geoserver.wfs] - 
Request: describeFeatureType
    handle = GeoTools 32.0(1e7dfc3f76d52f53b7a7b0af9bc02d5a1c321535) WFS 2.0.0 DataStore @PC-0017#1
    service = WFS
    version = 2.0.0
    baseUrl = http://localhost:8484/geoserver/
    typeName[0] = {https://bis.org/bis}test
    outputFormat = application/gml+xml; version=3.2
31 Oct 11:48:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 11:48:49 INFO   [geoserver.ows] - 
org.geoserver.wfs.WFSException: Invalid value for property geometry
	at org.geoserver.wfs.UpdateElementHandler.validateValue(UpdateElementHandler.java:199)
	at org.geoserver.wfs.UpdateElementHandler.checkValidity(UpdateElementHandler.java:159)
	at org.geoserver.wfs.Transaction.execute(Transaction.java:202)
	at org.geoserver.wfs.Transaction.transaction(Transaction.java:98)
	at org.geoserver.wfs.DefaultWebFeatureService20.transaction(DefaultWebFeatureService20.java:188)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:51)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:241)
	at jdk.proxy3/jdk.proxy3.$Proxy109.transaction(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:905)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:269)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:141)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:660)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:383)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:937)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
31 Oct 11:51:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 11:51:49 INFO   [geoserver.wfs] - 
Request: getCapabilities
    acceptVersions:
        version[0] = 2.0.0
    baseUrl = http://localhost:8484/geoserver/
    service = WFS
31 Oct 11:51:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 11:51:51 INFO   [geoserver.wfs] - 
Request: describeFeatureType
    handle = GeoTools 32.0(1e7dfc3f76d52f53b7a7b0af9bc02d5a1c321535) WFS 2.0.0 DataStore @PC-0017#1
    service = WFS
    version = 2.0.0
    baseUrl = http://localhost:8484/geoserver/
    typeName[0] = {https://bis.org/bis}test
    outputFormat = application/gml+xml; version=3.2
31 Oct 11:51:52 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 11:51:53 INFO   [geoserver.gwc] - DataStoreChange: {https://bis.org/bis}test TransactionEventType[PreInsert]
31 Oct 11:51:53 INFO   [geoserver.gwc] - DataStoreChange: {https://bis.org/bis}test TransactionEventType[PostInsert]
31 Oct 11:51:53 INFO   [geoserver.wfs] - 
Request: transaction
    handle = GeoTools 32.0(1e7dfc3f76d52f53b7a7b0af9bc02d5a1c321535) WFS 2.0.0 DataStore @PC-0017#1
    service = WFS
    version = 2.0.0
    baseUrl = http://localhost:8484/geoserver/
    group[0] = wfs:abstractTransactionAction=net.opengis.wfs20.impl.InsertTypeImpl@16448df4 (handle: null) (any: [SimpleFeatureImpl:test=[SimpleFeatureImpl.Attribute: geometry<geometry id=0192e26a-e154-7600-6bd5-feb449deeaa0>=POLYGON ((30.262776 59.939543, 30.262908 59.939581, 30.262941 59.939553, 30.262957 59.93954, 30.263027 59.939489, 30.262897 59.939447, 30.262776 59.939543))]], inputFormat: application/gml+xml; version=3.2, srsName: urn:ogc:def:crs:EPSG::4326)
    abstractTransactionActionGroup[0] = wfs:abstractTransactionAction=net.opengis.wfs20.impl.InsertTypeImpl@16448df4 (handle: null) (any: [SimpleFeatureImpl:test=[SimpleFeatureImpl.Attribute: geometry<geometry id=0192e26a-e154-7600-6bd5-feb449deeaa0>=POLYGON ((30.262776 59.939543, 30.262908 59.939581, 30.262941 59.939553, 30.262957 59.93954, 30.263027 59.939489, 30.262897 59.939447, 30.262776 59.939543))]], inputFormat: application/gml+xml; version=3.2, srsName: urn:ogc:def:crs:EPSG::4326)
    abstractTransactionAction[0]:
        any[0] = SimpleFeatureImpl:test=[SimpleFeatureImpl.Attribute: geometry<geometry id=0192e26a-e154-7600-6bd5-feb449deeaa0>=POLYGON ((30.262776 59.939543, 30.262908 59.939581, 30.262941 59.939553, 30.262957 59.93954, 30.263027 59.939489, 30.262897 59.939447, 30.262776 59.939543))]
        inputFormat = application/gml+xml; version=3.2
        srsName = urn:ogc:def:crs:EPSG::4326
    releaseAction = ALL
31 Oct 11:51:53 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 11:51:53 INFO   [geoserver.wfs] - 
Request: getCapabilities
    acceptVersions:
        version[0] = 2.0.0
    baseUrl = http://localhost:8484/geoserver/
    service = WFS
31 Oct 11:51:53 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 11:51:53 INFO   [geoserver.wfs] - 
Request: describeFeatureType
    handle = GeoTools 32.0(1e7dfc3f76d52f53b7a7b0af9bc02d5a1c321535) WFS 2.0.0 DataStore @PC-0017#1
    service = WFS
    version = 2.0.0
    baseUrl = http://localhost:8484/geoserver/
    typeName[0] = {https://bis.org/bis}test
    outputFormat = application/gml+xml; version=3.2
31 Oct 11:51:53 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 11:51:53 INFO   [geoserver.ows] - 
org.geoserver.wfs.WFSException: Invalid value for property geometry
	at org.geoserver.wfs.UpdateElementHandler.validateValue(UpdateElementHandler.java:199)
	at org.geoserver.wfs.UpdateElementHandler.checkValidity(UpdateElementHandler.java:159)
	at org.geoserver.wfs.Transaction.execute(Transaction.java:202)
	at org.geoserver.wfs.Transaction.transaction(Transaction.java:98)
	at org.geoserver.wfs.DefaultWebFeatureService20.transaction(DefaultWebFeatureService20.java:188)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:51)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:241)
	at jdk.proxy3/jdk.proxy3.$Proxy109.transaction(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:905)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:269)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:141)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:660)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:383)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:937)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
31 Oct 11:52:36 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 11:52:36 INFO   [geoserver.wfs] - 
Request: getCapabilities
    acceptVersions:
        version[0] = 2.0.0
    baseUrl = http://localhost:8484/geoserver/
    service = WFS
31 Oct 11:52:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 11:52:38 INFO   [geoserver.wfs] - 
Request: describeFeatureType
    handle = GeoTools 32.0(1e7dfc3f76d52f53b7a7b0af9bc02d5a1c321535) WFS 2.0.0 DataStore @PC-0017#1
    service = WFS
    version = 2.0.0
    baseUrl = http://localhost:8484/geoserver/
    typeName[0] = {https://bis.org/bis}test
    outputFormat = application/gml+xml; version=3.2
31 Oct 11:52:39 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 11:52:39 INFO   [geoserver.gwc] - DataStoreChange: {https://bis.org/bis}test TransactionEventType[PreInsert]
31 Oct 11:52:39 INFO   [geoserver.gwc] - DataStoreChange: {https://bis.org/bis}test TransactionEventType[PostInsert]
31 Oct 11:52:39 INFO   [geoserver.wfs] - 
Request: transaction
    handle = GeoTools 32.0(1e7dfc3f76d52f53b7a7b0af9bc02d5a1c321535) WFS 2.0.0 DataStore @PC-0017#1
    service = WFS
    version = 2.0.0
    baseUrl = http://localhost:8484/geoserver/
    group[0] = wfs:abstractTransactionAction=net.opengis.wfs20.impl.InsertTypeImpl@1277346b (handle: null) (any: [SimpleFeatureImpl:test=[SimpleFeatureImpl.Attribute: geometry<geometry id=0192e26b-98b5-7600-6bd5-3b045077a676>=POLYGON ((30.262776 59.939543, 30.262908 59.939581, 30.262941 59.939553, 30.262957 59.93954, 30.263027 59.939489, 30.262897 59.939447, 30.262776 59.939543))]], inputFormat: application/gml+xml; version=3.2, srsName: urn:ogc:def:crs:EPSG::4326)
    abstractTransactionActionGroup[0] = wfs:abstractTransactionAction=net.opengis.wfs20.impl.InsertTypeImpl@1277346b (handle: null) (any: [SimpleFeatureImpl:test=[SimpleFeatureImpl.Attribute: geometry<geometry id=0192e26b-98b5-7600-6bd5-3b045077a676>=POLYGON ((30.262776 59.939543, 30.262908 59.939581, 30.262941 59.939553, 30.262957 59.93954, 30.263027 59.939489, 30.262897 59.939447, 30.262776 59.939543))]], inputFormat: application/gml+xml; version=3.2, srsName: urn:ogc:def:crs:EPSG::4326)
    abstractTransactionAction[0]:
        any[0] = SimpleFeatureImpl:test=[SimpleFeatureImpl.Attribute: geometry<geometry id=0192e26b-98b5-7600-6bd5-3b045077a676>=POLYGON ((30.262776 59.939543, 30.262908 59.939581, 30.262941 59.939553, 30.262957 59.93954, 30.263027 59.939489, 30.262897 59.939447, 30.262776 59.939543))]
        inputFormat = application/gml+xml; version=3.2
        srsName = urn:ogc:def:crs:EPSG::4326
    releaseAction = ALL
31 Oct 11:52:39 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 11:52:39 INFO   [geoserver.wfs] - 
Request: getCapabilities
    acceptVersions:
        version[0] = 2.0.0
    baseUrl = http://localhost:8484/geoserver/
    service = WFS
31 Oct 11:52:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 11:52:40 INFO   [geoserver.wfs] - 
Request: describeFeatureType
    handle = GeoTools 32.0(1e7dfc3f76d52f53b7a7b0af9bc02d5a1c321535) WFS 2.0.0 DataStore @PC-0017#1
    service = WFS
    version = 2.0.0
    baseUrl = http://localhost:8484/geoserver/
    typeName[0] = {https://bis.org/bis}test
    outputFormat = application/gml+xml; version=3.2
31 Oct 11:52:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 11:52:40 INFO   [geoserver.ows] - 
org.geoserver.wfs.WFSException: Invalid value for property geometry
	at org.geoserver.wfs.UpdateElementHandler.validateValue(UpdateElementHandler.java:199)
	at org.geoserver.wfs.UpdateElementHandler.checkValidity(UpdateElementHandler.java:159)
	at org.geoserver.wfs.Transaction.execute(Transaction.java:202)
	at org.geoserver.wfs.Transaction.transaction(Transaction.java:98)
	at org.geoserver.wfs.DefaultWebFeatureService20.transaction(DefaultWebFeatureService20.java:188)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:51)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:241)
	at jdk.proxy3/jdk.proxy3.$Proxy109.transaction(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:905)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:269)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:141)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:660)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:383)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:937)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
31 Oct 11:58:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 11:58:08 INFO   [geoserver.wfs] - 
Request: getCapabilities
    acceptVersions:
        version[0] = 2.0.0
    baseUrl = http://localhost:8484/geoserver/
    service = WFS
31 Oct 11:58:11 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 11:58:11 INFO   [geoserver.wfs] - 
Request: describeFeatureType
    handle = GeoTools 32.0(1e7dfc3f76d52f53b7a7b0af9bc02d5a1c321535) WFS 2.0.0 DataStore @PC-0017#1
    service = WFS
    version = 2.0.0
    baseUrl = http://localhost:8484/geoserver/
    typeName[0] = {https://bis.org/bis}test
    outputFormat = application/gml+xml; version=3.2
31 Oct 11:58:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 11:58:12 INFO   [geoserver.gwc] - DataStoreChange: {https://bis.org/bis}test TransactionEventType[PreInsert]
31 Oct 11:58:12 INFO   [geoserver.gwc] - DataStoreChange: {https://bis.org/bis}test TransactionEventType[PostInsert]
31 Oct 11:58:12 INFO   [geoserver.wfs] - 
Request: transaction
    handle = GeoTools 32.0(1e7dfc3f76d52f53b7a7b0af9bc02d5a1c321535) WFS 2.0.0 DataStore @PC-0017#1
    service = WFS
    version = 2.0.0
    baseUrl = http://localhost:8484/geoserver/
    group[0] = wfs:abstractTransactionAction=net.opengis.wfs20.impl.InsertTypeImpl@28f0ed21 (handle: null) (any: [SimpleFeatureImpl:test=[SimpleFeatureImpl.Attribute: geometry<geometry id=0192e270-ac2e-7800-6bd5-0114284bfaac>=POLYGON ((30.262776 59.939543, 30.262908 59.939581, 30.262941 59.939553, 30.262957 59.93954, 30.263027 59.939489, 30.262897 59.939447, 30.262776 59.939543))]], inputFormat: application/gml+xml; version=3.2, srsName: urn:ogc:def:crs:EPSG::4326)
    abstractTransactionActionGroup[0] = wfs:abstractTransactionAction=net.opengis.wfs20.impl.InsertTypeImpl@28f0ed21 (handle: null) (any: [SimpleFeatureImpl:test=[SimpleFeatureImpl.Attribute: geometry<geometry id=0192e270-ac2e-7800-6bd5-0114284bfaac>=POLYGON ((30.262776 59.939543, 30.262908 59.939581, 30.262941 59.939553, 30.262957 59.93954, 30.263027 59.939489, 30.262897 59.939447, 30.262776 59.939543))]], inputFormat: application/gml+xml; version=3.2, srsName: urn:ogc:def:crs:EPSG::4326)
    abstractTransactionAction[0]:
        any[0] = SimpleFeatureImpl:test=[SimpleFeatureImpl.Attribute: geometry<geometry id=0192e270-ac2e-7800-6bd5-0114284bfaac>=POLYGON ((30.262776 59.939543, 30.262908 59.939581, 30.262941 59.939553, 30.262957 59.93954, 30.263027 59.939489, 30.262897 59.939447, 30.262776 59.939543))]
        inputFormat = application/gml+xml; version=3.2
        srsName = urn:ogc:def:crs:EPSG::4326
    releaseAction = ALL
31 Oct 11:58:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 11:58:12 INFO   [geoserver.wfs] - 
Request: getCapabilities
    acceptVersions:
        version[0] = 2.0.0
    baseUrl = http://localhost:8484/geoserver/
    service = WFS
31 Oct 11:58:13 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 11:58:13 INFO   [geoserver.wfs] - 
Request: describeFeatureType
    handle = GeoTools 32.0(1e7dfc3f76d52f53b7a7b0af9bc02d5a1c321535) WFS 2.0.0 DataStore @PC-0017#1
    service = WFS
    version = 2.0.0
    baseUrl = http://localhost:8484/geoserver/
    typeName[0] = {https://bis.org/bis}test
    outputFormat = application/gml+xml; version=3.2
31 Oct 11:58:13 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 11:58:13 INFO   [geoserver.ows] - 
org.geoserver.wfs.WFSException: Invalid value for property geometry
	at org.geoserver.wfs.UpdateElementHandler.validateValue(UpdateElementHandler.java:199)
	at org.geoserver.wfs.UpdateElementHandler.checkValidity(UpdateElementHandler.java:159)
	at org.geoserver.wfs.Transaction.execute(Transaction.java:202)
	at org.geoserver.wfs.Transaction.transaction(Transaction.java:98)
	at org.geoserver.wfs.DefaultWebFeatureService20.transaction(DefaultWebFeatureService20.java:188)
	at jdk.internal.reflect.GeneratedMethodAccessor194.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:51)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:241)
	at jdk.proxy3/jdk.proxy3.$Proxy109.transaction(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor193.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:905)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:269)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:141)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:660)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:383)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:937)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
31 Oct 12:51:17 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
31 Oct 12:51:17 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
31 Oct 12:51:17 CONFIG [gwc.layer] - Loaded 1 tile layers in 15.22 ms
31 Oct 12:51:17 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
31 Oct 12:51:17 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
31 Oct 12:51:17 CONFIG [gwc.layer] - Loaded 1 tile layers in 11.78 ms
31 Oct 12:51:17 WARN   [support.DisposableBeanAdapter] - Custom destroy method 'destroy' on bean with name 'gwcMemoryBlobStore' threw an exception: java.util.concurrent.RejectedExecutionException: Task java.util.concurrent.FutureTask@3973ed44[Not completed, task = org.geowebcache.storage.blobstore.memory.MemoryBlobStore$BlobStoreTask@4cb77db1] rejected from java.util.concurrent.ThreadPoolExecutor@7d46c8d7[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1]
31 Oct 12:51:17 INFO   [geoserver.logging] - Beginning GeoServer cleanup sequence
31 Oct 12:51:47 CONFIG [geoserver.logging] - Log4j 2 configuration set to DEFAULT_LOGGING.xml
31 Oct 12:51:49 CONFIG [gwc.config] - Will look for 'geowebcache.xml' in directory '/opt/geoserver_data/gwc'.
31 Oct 12:51:49 WARN   [config.XMLConfiguration] - GWC configuration validation error: cvc-elt.1.a: Cannot find the declaration of element 'gwcConfiguration'.
31 Oct 12:51:49 WARN   [config.XMLConfiguration] - Will try to use configuration anyway. Please check the order of declared elements against the schema.
31 Oct 12:51:49 CONFIG [org.geoserver] - GeoServer configuration lock is enabled
31 Oct 12:51:49 CONFIG [org.geoserver] - Loading catalog /opt/geoserver_data
31 Oct 12:51:49 CONFIG [org.geoserver] - Loaded style 'dem'
31 Oct 12:51:49 CONFIG [org.geoserver] - Loaded style 'burg'
31 Oct 12:51:49 CONFIG [org.geoserver] - Loaded style 'cite_lakes'
31 Oct 12:51:49 CONFIG [org.geoserver] - Loaded style 'capitals'
31 Oct 12:51:49 CONFIG [org.geoserver] - Loaded style 'green'
31 Oct 12:51:49 CONFIG [org.geoserver] - Loaded style 'generic'
31 Oct 12:51:49 CONFIG [org.geoserver] - Loaded style 'grass'
31 Oct 12:51:49 CONFIG [org.geoserver] - Loaded style 'giant_polygon'
31 Oct 12:51:49 CONFIG [org.geoserver] - Loaded style 'line'
31 Oct 12:51:49 CONFIG [org.geoserver] - Loaded style 'point'
31 Oct 12:51:49 CONFIG [org.geoserver] - Loaded style 'polygon'
31 Oct 12:51:49 CONFIG [org.geoserver] - Loaded style 'poi'
31 Oct 12:51:49 CONFIG [org.geoserver] - Loaded style 'pophatch'
31 Oct 12:51:49 CONFIG [org.geoserver] - Loaded style 'poly_landmarks'
31 Oct 12:51:49 CONFIG [org.geoserver] - Loaded style 'rain'
31 Oct 12:51:49 CONFIG [org.geoserver] - Loaded style 'population'
31 Oct 12:51:49 CONFIG [org.geoserver] - Loaded style 'raster'
31 Oct 12:51:49 CONFIG [org.geoserver] - Loaded style 'restricted'
31 Oct 12:51:49 CONFIG [org.geoserver] - Loaded style 'simple_roads'
31 Oct 12:51:49 CONFIG [org.geoserver] - Loaded style 'simple_streams'
31 Oct 12:51:49 CONFIG [org.geoserver] - Loaded style 'tiger_roads'
31 Oct 12:51:49 CONFIG [org.geoserver] - Loaded default workspace 'bis'
31 Oct 12:51:49 CONFIG [org.geoserver] - Loaded workspace 'bis'
31 Oct 12:51:50 CONFIG [org.geoserver] - Loaded data store 'bis', enabled
31 Oct 12:51:51 CONFIG [org.geoserver] - Loaded feature type 'test', enabled
31 Oct 12:51:51 CONFIG [org.geoserver] - Loaded layer 'test'
31 Oct 12:51:51 CONFIG [org.geoserver] - Read catalog in 1.846 s
31 Oct 12:51:51 CONFIG [config.XMLConfiguration] - Initializing GridSets from gwc
31 Oct 12:51:51 CONFIG [config.XMLConfiguration] - Initializing layers from gwc
31 Oct 12:51:51 CONFIG [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
31 Oct 12:51:51 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
31 Oct 12:51:51 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
31 Oct 12:51:51 CONFIG [gwc.layer] - Loaded 1 tile layers in 15.79 ms
31 Oct 12:51:51 CONFIG [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
31 Oct 12:51:51 CONFIG [storage.DefaultStorageFinder] - Found system environment variableGEOSERVER_DATA_DIR set to /opt/geoserver_data/, using it as the default prefix.
31 Oct 12:51:51 CONFIG [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
31 Oct 12:51:51 CONFIG [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
31 Oct 12:51:51 CONFIG [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
31 Oct 12:51:51 CONFIG [org.geoserver] - Loaded service 'WMTSInfoImpl--3ef31051:182c1e8b194:-8000', enabled
31 Oct 12:51:51 CONFIG [org.geoserver] - Loaded service 'wcs', enabled
31 Oct 12:51:51 CONFIG [org.geoserver] - Loaded service 'wms', enabled
31 Oct 12:51:51 CONFIG [org.geoserver] - Loaded service 'wfs', enabled
31 Oct 12:51:51 CONFIG [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
31 Oct 12:51:51 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota.xml' in directory '/opt/geoserver_data/gwc'.
31 Oct 12:51:51 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/opt/geoserver_data/gwc'.
31 Oct 12:51:51 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
31 Oct 12:51:51 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
31 Oct 12:51:54 CONFIG [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
31 Oct 12:51:54 CONFIG [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
31 Oct 12:51:55 WARN   [gce.imagemosaic] - Unable to set ordering between tiff readers spi
31 Oct 12:51:56 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
31 Oct 12:51:56 CONFIG [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
31 Oct 12:51:56 CONFIG [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
31 Oct 12:51:56 CONFIG [diskquota.DiskQuotaMonitor] - 1 layers attached to global quota 500.0 MB
31 Oct 12:51:56 CONFIG [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
31 Oct 12:51:56 CONFIG [geoserver.security] - Start reloading user/groups for service named default
31 Oct 12:51:56 CONFIG [geoserver.security] - Reloading user/groups successful for service named default
31 Oct 12:52:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 12:52:02 INFO   [geoserver.wfs] - 
Request: getCapabilities
    acceptVersions:
        version[0] = 2.0.0
    baseUrl = http://localhost:8484/geoserver/
    service = WFS
31 Oct 12:52:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 12:52:05 INFO   [wfs.xml] - Identified addresses and hostnames for local interfaces: 172.18.0.2 2a19ec873393, 0:0:0:0:0:0:0:1%lo localhost, 127.0.0.1 localhost
31 Oct 12:52:05 INFO   [wfs.xml] - Additional aliases for local host: localhost 
31 Oct 12:52:07 INFO   [geoserver.wfs] - 
Request: describeFeatureType
    handle = GeoTools 32.0(1e7dfc3f76d52f53b7a7b0af9bc02d5a1c321535) WFS 2.0.0 DataStore @PC-0017#1
    service = WFS
    version = 2.0.0
    baseUrl = http://localhost:8484/geoserver/
    typeName[0] = {https://bis.org/bis}test
    outputFormat = application/gml+xml; version=3.2
31 Oct 12:52:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 12:52:09 INFO   [geoserver.gwc] - DataStoreChange: {https://bis.org/bis}test TransactionEventType[PreInsert]
31 Oct 12:52:09 INFO   [geoserver.gwc] - DataStoreChange: {https://bis.org/bis}test TransactionEventType[PostInsert]
31 Oct 12:52:09 INFO   [geoserver.wfs] - 
Request: transaction
    handle = GeoTools 32.0(1e7dfc3f76d52f53b7a7b0af9bc02d5a1c321535) WFS 2.0.0 DataStore @PC-0017#1
    service = WFS
    version = 2.0.0
    baseUrl = http://localhost:8484/geoserver/
    group[0] = wfs:abstractTransactionAction=net.opengis.wfs20.impl.InsertTypeImpl@3eb22eb9 (handle: null) (any: [SimpleFeatureImpl:test=[SimpleFeatureImpl.Attribute: geometry<geometry id=0192e2a2-01ae-7100-6bd5-16b8c8f06b16>=POLYGON ((30.262776 59.939543, 30.262908 59.939581, 30.262941 59.939553, 30.262957 59.93954, 30.263027 59.939489, 30.262897 59.939447, 30.262776 59.939543))]], inputFormat: application/gml+xml; version=3.2, srsName: urn:ogc:def:crs:EPSG::4326)
    abstractTransactionActionGroup[0] = wfs:abstractTransactionAction=net.opengis.wfs20.impl.InsertTypeImpl@3eb22eb9 (handle: null) (any: [SimpleFeatureImpl:test=[SimpleFeatureImpl.Attribute: geometry<geometry id=0192e2a2-01ae-7100-6bd5-16b8c8f06b16>=POLYGON ((30.262776 59.939543, 30.262908 59.939581, 30.262941 59.939553, 30.262957 59.93954, 30.263027 59.939489, 30.262897 59.939447, 30.262776 59.939543))]], inputFormat: application/gml+xml; version=3.2, srsName: urn:ogc:def:crs:EPSG::4326)
    abstractTransactionAction[0]:
        any[0] = SimpleFeatureImpl:test=[SimpleFeatureImpl.Attribute: geometry<geometry id=0192e2a2-01ae-7100-6bd5-16b8c8f06b16>=POLYGON ((30.262776 59.939543, 30.262908 59.939581, 30.262941 59.939553, 30.262957 59.93954, 30.263027 59.939489, 30.262897 59.939447, 30.262776 59.939543))]
        inputFormat = application/gml+xml; version=3.2
        srsName = urn:ogc:def:crs:EPSG::4326
    releaseAction = ALL
31 Oct 12:52:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 12:52:09 INFO   [geoserver.wfs] - 
Request: getCapabilities
    acceptVersions:
        version[0] = 2.0.0
    baseUrl = http://localhost:8484/geoserver/
    service = WFS
31 Oct 12:52:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 12:52:09 INFO   [geoserver.wfs] - 
Request: describeFeatureType
    handle = GeoTools 32.0(1e7dfc3f76d52f53b7a7b0af9bc02d5a1c321535) WFS 2.0.0 DataStore @PC-0017#1
    service = WFS
    version = 2.0.0
    baseUrl = http://localhost:8484/geoserver/
    typeName[0] = {https://bis.org/bis}test
    outputFormat = application/gml+xml; version=3.2
31 Oct 12:52:10 INFO   [geoserver.wfs] - 
Request: getServiceInfo
31 Oct 12:52:10 INFO   [geoserver.ows] - 
org.geoserver.wfs.WFSException: Invalid value for property geometry
	at org.geoserver.wfs.UpdateElementHandler.validateValue(UpdateElementHandler.java:199)
	at org.geoserver.wfs.UpdateElementHandler.checkValidity(UpdateElementHandler.java:159)
	at org.geoserver.wfs.Transaction.execute(Transaction.java:202)
	at org.geoserver.wfs.Transaction.transaction(Transaction.java:98)
	at org.geoserver.wfs.DefaultWebFeatureService20.transaction(DefaultWebFeatureService20.java:188)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:51)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:241)
	at jdk.proxy3/jdk.proxy3.$Proxy109.transaction(Unknown Source)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:905)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:269)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:51)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:199)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.HTTPMethodFilter.doFilter(HTTPMethodFilter.java:36)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:352)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilterInternal(GeoServerSecurityContextPersistenceFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:361)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:225)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:190)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:141)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:168)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:144)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:660)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:346)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:383)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:937)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
31 Oct 12:53:34 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
31 Oct 12:53:34 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
31 Oct 12:53:34 CONFIG [gwc.layer] - Loaded 1 tile layers in 14.59 ms
31 Oct 12:53:34 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
31 Oct 12:53:34 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
31 Oct 12:53:34 CONFIG [gwc.layer] - Loaded 1 tile layers in 11.93 ms
31 Oct 12:53:34 WARN   [support.DisposableBeanAdapter] - Custom destroy method 'destroy' on bean with name 'gwcMemoryBlobStore' threw an exception: java.util.concurrent.RejectedExecutionException: Task java.util.concurrent.FutureTask@7c829fa[Not completed, task = org.geowebcache.storage.blobstore.memory.MemoryBlobStore$BlobStoreTask@a16b3ba] rejected from java.util.concurrent.ThreadPoolExecutor@2a5427f1[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1]
31 Oct 12:53:34 INFO   [geoserver.logging] - Beginning GeoServer cleanup sequence
